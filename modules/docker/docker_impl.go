// Code generated by go-bindata.
// sources:
// builder.js
// docker.js
// DO NOT EDIT!

package docker

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _builderJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3d\x6b\x6f\x1b\x49\x72\x9f\x6d\x20\xff\xa1\x45\x5c\x4e\xc3\x35\x6f\x68\x79\xdf\xe6\x69\x0f\x5e\xc7\x87\x38\xc9\xad\x17\xeb\x45\x82\x40\x10\x88\xe1\xb0\x65\x4d\x44\xce\x30\x33\x43\xd9\xca\x2d\xf3\xdb\x53\xd5\xaf\xa9\x7e\xcd\x0c\x25\x6d\x80\xe4\x96\x30\x44\x72\xba\xba\xba\xba\xaa\xba\x5e\xdd\x4d\x6f\xab\xf5\x7e\xc3\x53\xfe\x69\x57\xd5\x6d\xc3\xce\x9f\xce\x3f\x13\xaf\x39\x4b\xae\xf6\x65\xde\x16\x55\x99\x48\x98\x66\xca\xfe\xca\xe6\x73\xf6\x91\xaf\x76\x59\x7e\xf3\x7d\x55\xb5\x4d\x5b\x67\xbb\xae\xc7\x13\x68\xfd\xf9\x9a\x33\x09\xcf\xf2\x2c\xbf\xe6\xa4\xf5\x36\xab\x59\x51\x36\x6d\xb6\xd9\xf0\xf5\x5f\x24\x4e\x76\xce\xfe\x7a\x58\x3c\xf5\x71\xd4\xfc\x3f\xf7\x45\xcd\x99\x26\x82\x40\xe8\x47\x6c\xb9\x54\xb4\x2c\x15\xf4\x72\xa9\x68\x7d\xbb\x06\x62\x29\x56\x44\xfb\xfa\x9a\xe7\x37\xac\xb8\xd2\xf4\x15\x0d\x90\xe3\x51\xf9\xa4\xb8\x4a\x5c\x2a\x2f\x34\xd6\xcb\x29\x85\x7c\x52\xf3\x76\x5f\x97\xde\xa4\x3a\x70\xcd\xd7\x85\x47\x4b\xcd\xb3\x96\xb3\x8c\x95\xfc\xa3\xa6\x27\xc9\xca\x35\xdb\xed\x5b\x56\xc0\xbf\xb2\xad\x58\x7b\xad\x98\x68\x8d\x8a\x6c\x54\x3d\xce\x7b\x86\x46\xce\x5a\xc4\x2a\x52\x5e\x02\xc3\x67\x56\x43\xb1\x7e\xc9\x74\x37\xbb\x65\x53\x65\x6b\x0e\xad\x57\xd9\xa6\xb1\x78\x74\xf0\x26\xf4\xe6\x13\xcf\xf7\x30\xa3\xb6\x93\x7f\x40\x74\x4f\xb6\x1e\x87\x72\x20\x3f\xb1\xb5\x70\xa6\x30\xe8\xf7\xee\x79\x40\xe2\x53\x8f\x94\x3f\x6f\xb2\x0f\x94\x8e\xac\x61\x72\x22\x3e\x21\xa9\x6c\x00\x5e\xb5\xf5\x9e\x7b\x98\x7e\x92\xf2\x45\x5c\x7a\x81\x54\x57\x04\x35\x05\x57\xba\x60\x53\xbc\x20\x10\x87\xa7\x8e\x9a\x23\x4c\x43\x39\x06\xd8\x57\xff\xc1\xf3\x96\x25\xdd\x3c\x55\x0b\xcc\x93\x74\x0e\xb0\x21\xdd\xc2\x24\x14\xb0\xbb\x9e\xbc\x81\x3c\xa5\x0f\x21\xcc\x03\xea\xe5\x62\xee\xfa\xed\xf6\xab\x4d\x91\x2f\x77\x59\x7b\xbd\x5c\x0e\x60\xde\x01\xe6\xc9\xc4\xc5\xf5\x2f\x20\x0a\xc6\xcb\xb6\xbe\x33\x82\x83\xf5\xa0\xd8\xaa\xf8\x49\x7a\xa8\x86\x90\x0d\x78\x3e\x25\x7c\x3f\x18\xc6\x3d\xfc\x35\x27\xd6\xf1\x02\x3e\xb3\xe7\x4c\x3d\x9b\x33\xc7\x5a\xce\x58\xaf\xd2\xa2\x75\x7a\x32\xd9\x83\x54\xc0\x86\x16\x79\x0b\xdc\xa0\x76\x4d\xf6\x4d\xb6\x08\xf7\x84\xc1\xeb\xaa\xaa\x59\x82\x2b\x7f\x87\x36\x0b\x9e\x83\x19\x4b\x4e\xd4\x10\xe9\x75\xd6\xbc\xfb\x58\xfe\x58\x57\x3b\x5e\xb7\x77\xc9\x6e\x3a\xd5\xa3\x5f\xec\xd0\x10\x6c\xe1\x0d\x06\x38\x3c\x7d\x62\x50\x87\xf8\x76\x36\xc5\xc5\xa4\xe6\x23\x8c\x04\x3b\x7b\xd0\x04\x01\xc1\xbf\xbd\xf9\xfe\xc7\x57\xaf\xff\x99\xfd\xeb\xab\x9f\xd8\xdb\x1f\xfe\xe9\xcd\xeb\x9f\xdf\xbe\xfb\x01\x90\xba\xde\x05\x3a\x38\xec\xc0\xd9\x22\xb9\x2d\x2f\xd7\xe8\x27\x92\xf6\x1a\x2c\xf6\xef\x7f\xcf\xf0\x3d\x35\x2d\x53\xf6\xcb\x2f\x86\x36\x96\xac\x67\x6c\x15\xe1\xda\x4a\x72\x6d\x15\x62\xd7\x5a\x32\x6a\x25\x19\x25\xfa\x76\xd2\x48\xd0\xf3\x89\x51\xf3\x0a\x16\x44\xbd\xcf\x5b\x40\x7c\xce\xd6\x0b\x76\x90\xc0\xeb\x74\x57\x57\x6d\xd5\xde\xed\xd0\x28\xaf\xd8\xf9\xf9\x39\x2b\xf7\x9b\x0d\xfb\x13\x7b\x27\x96\x74\x9a\x0b\x83\x9f\x00\x0d\x2f\x71\x79\xdb\xf0\xdd\xb7\x99\x70\x08\x38\xe4\x14\x05\xa6\xd8\xc0\x6f\x61\x5d\x34\xcb\x33\x80\x0d\xc9\xed\xf3\xa9\x66\x57\x04\xe0\x0b\x0d\xb0\x6f\x8b\x4d\x14\xcd\x97\x1a\xaa\x28\xd7\xfc\x53\x14\xec\x2b\x0d\x86\xf4\xc6\x89\xfa\x46\x83\x01\xcf\xae\x8a\x0f\x51\xb8\xb3\x17\x1a\x70\x5d\xe5\x37\xbc\x8e\x80\x7d\x8b\x50\x49\x27\xe7\x1f\xaa\xb6\xb8\x2a\xf2\x0c\xbf\x19\x79\xd3\x87\x17\xd6\x97\xc9\xfb\x36\xab\xdb\xa2\xfc\x30\x41\x31\x3f\xc7\x3f\xdd\xa3\xc5\xb8\xde\x7c\x2d\x3a\x9f\x75\x9d\xe1\xc9\xc8\xbe\x6f\xea\xba\xaa\x45\xf7\x17\x5d\x77\xf9\x70\x0c\x86\x6a\xb7\xd3\xb4\x7f\xae\xfa\xab\x47\x23\x7b\x2b\xda\xbf\xe8\x3a\x8f\xa2\xfd\xd5\x06\xd4\x76\x7d\x47\xa7\xff\xa5\x40\xe1\x34\x0c\x63\xfa\x7e\x5f\x6c\xd6\x7a\x0e\x5f\x09\x1c\xe6\xd1\xc8\xde\xa2\xeb\xd7\x5d\xd7\xb1\xfd\x3a\xde\x7f\xd3\x75\x1e\xcd\xfb\x9b\xa2\xe3\xfd\xb7\x92\x7d\xfa\xd1\x70\xef\x9f\xf8\xb6\xba\xd5\xbd\xcf\xa4\xda\x99\x67\x23\xbb\x6b\xb5\x3b\xeb\x7a\x8f\xe2\xb8\x1e\xe7\xed\x36\xfb\xc0\x25\x8a\x17\x16\x01\xb2\x61\x34\x15\x04\xcf\xe7\x94\x94\xb1\x68\x44\xc8\x6b\x78\x21\x35\xd1\x3c\x1b\xd9\x5d\xf3\xe2\xcb\xae\xb7\xe4\xc5\x61\x9a\x68\x67\x48\xbb\xa1\x6f\x08\x37\x60\xde\x31\xd5\x96\xc7\x69\x09\x75\x00\x48\xf8\x17\x6a\x79\x83\xc6\x19\xc9\x29\xc9\x43\xed\xc0\x10\x9d\x83\xc6\xd8\xb0\x86\xd7\x05\x6f\x92\xac\xae\x67\x10\xf2\xf3\x3a\x03\xaf\x32\x63\x18\x0f\xaf\xc0\xf6\x19\xa3\xa6\x1f\x00\x26\xf3\xd1\x72\x79\xe8\x9d\x0e\x8a\x81\x22\x2c\x78\x55\xd7\xd9\x5d\x5a\x34\xe2\x1d\xf1\x0b\x1f\x79\x02\x1f\xd2\x0d\x2f\x3f\xb4\xd7\x06\x37\xbe\x54\x20\x05\xee\x70\x5b\x34\x3c\xad\x79\x53\x6d\x6e\x79\x32\x55\x18\x95\x87\x93\x96\x7c\xbb\xdb\xf0\x56\xc4\xcb\xcf\x55\xb3\xea\x8d\x5e\x4b\x61\x20\x46\x5a\xe1\x9a\x01\x14\x3a\x41\x6b\x58\xe1\x68\xc4\xac\xd1\x05\x5a\xb3\xe9\x80\xc4\x94\x14\x6b\x70\x22\x17\x86\x84\xcb\x19\xe9\xc3\x71\x8a\x4e\x37\xcd\x8d\x58\x1b\x65\xad\x00\x5a\xf4\xc3\xb8\x44\x1a\x96\xbb\x2f\x39\xd7\x18\xca\x83\xff\x88\x43\x72\x15\xa3\xf0\xd9\x33\x33\xe3\xc8\x70\x38\xc7\x4e\x30\xdf\x9d\xb3\x88\x98\x7d\x32\x6d\x39\x8f\x20\x74\x88\x58\x41\x8e\x14\xe9\x31\x68\x9d\x47\x07\xda\x95\x32\xd9\x45\x2d\x00\x0f\x62\x5d\x12\x9d\xfb\x39\x6b\x6e\xc0\x2d\xb5\xdc\xcc\xde\x3c\xb9\xe8\x3e\x4d\xde\xef\xf3\x9c\x37\x0d\x0d\x07\xd4\x93\x45\x4f\xaf\xce\x95\x48\x6b\x6c\x79\x91\xf0\x38\xd4\x7f\xbc\xf0\xfc\x07\xb1\x5b\xa6\x93\x65\xb4\xba\xa7\x96\xc5\xa2\x8f\x3d\x50\x6a\x64\x5a\xde\xb4\x89\x0c\xc1\x66\x6c\xb7\xc9\x5a\x88\x89\xb7\x10\xbb\x97\xb7\x86\x3f\x6a\x09\xeb\x38\x2d\x6d\xb2\xb2\x68\x8b\xff\xe2\x91\x6e\x92\xe9\x7a\x50\xc4\x8f\xe9\x33\xbc\x29\xd2\x84\x7b\x15\x71\x1c\x91\xca\xb2\xd9\x43\xb0\x6d\x86\x34\xd1\x7b\xa2\xa0\x21\x89\x90\x10\x6e\xf4\xad\xda\x75\x0d\xca\xa6\x5c\xa0\x12\xfd\x64\x19\x01\x63\x74\xaa\x3d\x22\x66\xdf\x9a\x4a\x93\x49\x8f\x6d\x00\xc0\x88\x5c\x2c\x6f\x6d\x8b\xa7\x46\xee\x62\xf3\x74\x85\x4f\x2c\x3b\x00\x5c\xc9\xb9\x45\x0e\x2e\x47\xf1\x54\xe4\x00\xb7\x55\xb1\x66\xcf\xd1\x5a\xa8\x67\xb2\x94\xb2\xa0\x3a\x5f\xeb\x22\x03\x66\x35\x62\x08\x85\x56\x93\xb3\x88\xd1\xb3\x1c\x43\x90\xc8\x0b\x44\xea\x74\x2e\xc6\x58\xd8\x4d\x02\x85\x6e\xd3\xbc\x4a\xb7\xd9\x8e\x08\xaf\x69\xf9\xce\x37\xcb\xe8\x69\xb0\x45\xb2\x65\xea\xaf\x6b\xed\x1a\x20\x0f\x72\x8c\x81\x6a\xc1\xde\x74\xad\x4f\xd3\xab\x62\x03\x8b\xdc\x1f\x9a\xf6\x60\x27\x32\xb7\x5a\xd8\x96\x42\xa4\x76\x62\x32\xca\xfa\x81\x00\x04\xeb\x83\x43\xbb\xde\xce\xac\x9d\x54\xaf\x4e\xcb\x0a\xd9\x3c\x6b\x01\xb8\x59\x04\x64\xee\x8d\x26\x20\x31\xc3\x93\x84\xd9\x6c\xdd\x92\x89\xa9\x94\x4b\xf2\x12\x89\x81\x56\x67\x82\x84\x88\x90\x11\x1e\x1c\x2a\xec\x1e\x65\xd2\x85\x29\xb1\x88\xe3\x92\x6d\x5a\xe0\xfb\x4c\x14\xc4\xa6\x51\x0f\xd2\x47\xf6\x28\xa7\x17\x57\x8e\x90\x1a\x50\x56\x6d\x23\x0a\x70\xb0\x05\x22\xf8\x61\xa9\xc2\x23\x28\x82\xb4\x17\xdb\xa2\x0d\x06\x95\x22\x12\x84\x0c\x3e\xd5\x99\xcd\x4c\x4a\xa5\x47\xee\x5b\x5c\x72\x38\x11\x3a\x8a\x43\x9a\xb0\x6c\x83\x78\xea\x7d\x99\x88\x75\x3e\x93\xcb\x3d\x15\xb6\x1a\x31\xdb\xf3\x4e\xdb\x6b\x5e\x5a\x2b\x0c\x26\xdb\x78\x82\x5e\x1e\x33\xd5\x19\xd1\x3a\x57\xfe\x8a\x40\xc2\x57\xe9\x67\xad\x85\x3f\x68\xea\x1a\x4c\x34\x2d\x4b\x97\xed\xdb\x4a\xc0\x8d\xb5\x76\xa8\x14\xa6\x93\x63\x9d\xc9\xf3\x80\x85\x46\xa4\x30\x8d\x7e\x23\x49\xa5\xd1\xbf\xa8\x1c\xbd\x15\x16\x65\xb5\x02\xec\xd0\x7b\x48\xf5\x91\x6c\x4d\xa0\x6b\xfd\x00\x89\xd6\xf7\xef\xd8\x73\xac\x94\x9d\x84\x99\x24\x35\xb9\xae\x3e\x8a\xb0\x5d\xc4\x30\xc9\xe9\xbf\x57\x7b\x76\x9d\xdd\x72\xd6\x56\x52\x9a\xec\xaa\xa8\x9b\xf6\xb4\xcf\x04\xf9\xa3\xc6\xec\xad\x60\x9c\x74\x6e\x01\x4f\xe1\xea\x24\x4e\x59\x2a\xe0\x52\x08\x3e\xe9\xb1\x85\x91\x75\x6c\xf5\x1e\xa3\x5f\xd5\x2e\x9e\x86\xf4\x68\xd5\xbd\xf3\x1f\x7c\x2d\x2d\x7d\x02\x17\xf2\x26\xcb\xaf\x47\x99\xed\x13\xa5\x62\x45\xf3\xd3\xbe\x2c\xc1\xd4\x80\x8e\x95\xd9\xd6\xd8\xed\x3e\xab\x1d\x30\xd0\x63\x57\xbb\x2e\x3b\xcd\x58\xd0\xce\xab\x8a\x20\xda\xa2\x7f\xac\xaa\x9b\xe4\x74\x07\x1c\x80\x2e\xa7\x00\xaf\x95\xdf\xef\xa5\xa6\x82\x80\xf6\x2c\x1e\x4a\x28\x5f\x8f\xa6\xb3\x6a\xda\x7e\x42\x6d\xf5\x1b\x56\xa8\x5a\x14\x47\xfc\xd8\x0c\x52\x7d\x34\x05\xcd\x31\x56\xeb\xb8\x78\x12\x7b\xc8\x31\x9c\x2e\xfa\x61\xc4\xc2\xe5\xf7\xb1\x6f\xaf\xab\xb2\xcd\x8a\x12\x03\x74\x4b\x72\x36\xbf\x10\x75\xee\xe2\x03\x4e\x04\x83\x4a\x34\x72\x92\xc4\x78\x4c\x19\x2b\x56\xe8\x17\x6e\x86\x59\x8b\xeb\xa2\xb8\x5c\xdc\xcf\xc1\xe9\x6a\x59\x40\x95\x42\xea\x2e\xe5\x1e\xd7\x23\x9b\x83\x12\xda\xf0\x4e\x06\x91\xa3\xec\xe3\xfd\x97\x86\x2a\xdb\x1d\xb3\x34\x86\x26\xa5\x45\xa7\x34\x0c\x3c\xcf\x56\x65\x05\x03\xf1\xa3\xc5\x06\xcb\x57\x8e\x08\x23\xc3\x4b\x92\x60\xa7\x01\x54\x3e\x22\x9d\x92\x7b\x34\xd6\x9a\x05\xf5\xf1\x56\x2a\xff\x94\x6f\xf6\x6b\x84\xbb\x90\xdc\xd9\x97\xc0\x1a\x21\x7c\xf3\x49\xcc\x5e\x7c\x06\x00\xf5\xc5\xa6\xfe\xd4\x80\xac\xf9\x0e\x52\x61\x5e\xe6\x05\x6f\x44\x17\x58\x57\x5c\xe1\x11\x0e\x4c\xe3\x31\x5f\x0a\x4c\xd0\xb3\x0d\xe4\xe8\xa7\x97\x4e\x24\x51\xa1\xe6\xa7\x15\x6a\x01\xd0\x3e\xd3\xc4\xba\xb1\x42\x95\xde\x56\x9b\xfd\xd6\xcf\x58\xaa\x74\x55\xc8\xfd\x36\x0d\x12\x76\xbb\xf3\xcf\xc4\x5a\xad\xd6\x11\x41\x57\x52\x8c\x32\xeb\x96\x9f\x09\x9e\x2e\x7c\x18\x8b\x01\x17\x08\x7b\xc6\x26\x7f\x28\x68\xb9\x99\x20\x1b\xca\xf3\x44\x51\xae\x8b\x77\x26\x65\x25\x0d\xe2\x4b\x36\x01\xbc\x95\x18\x80\xfa\xcd\xc3\x67\xf3\xee\x4b\x60\x36\x0b\xda\xba\xc3\xbd\x3e\x7d\x88\xc0\x55\x43\xa5\xe4\x6a\x07\xb0\xb2\x97\x50\x8f\x3a\xfa\x31\xaf\xc5\x23\xb3\xb9\x59\x60\x09\x0b\xac\x69\xe1\x1a\x70\x19\x96\x2d\x00\xe0\x8f\xd0\x0a\xef\xcf\x9e\x79\x5c\x56\xa7\x49\x9c\xae\xbe\xb9\xd4\xb2\x12\xca\x19\x0f\x4b\xec\xd2\x73\xd7\x21\x12\x90\x18\x00\x5c\x4c\xe6\x8b\x3b\xb6\xc1\x7e\x72\xf2\xdf\x06\x28\x15\xb9\xe7\xbb\xab\xc4\x24\x3b\x51\x63\x33\x36\x66\x50\x09\x9f\x38\x76\x12\x2d\x07\x83\xc3\x2b\x4a\x4b\xcc\xfa\xe5\x9a\x27\x9f\xd1\x42\x89\x3b\x7d\x5e\xf8\x10\xd4\xa5\xe2\x0e\x73\xc0\xd1\x12\x37\x0b\x42\xd7\xf1\x5f\x07\xdc\x85\x84\xf1\x50\x4a\x18\x6b\x0d\x17\xe4\xdb\x48\x9e\xd9\xfb\x80\x51\xce\x45\xb8\x76\x08\x94\x94\xe8\x5c\x1f\x42\x99\xde\x5a\x8a\xd2\x14\xf2\xde\x72\x8d\x9e\x8a\x3e\x71\x57\x27\x73\x0b\xb5\x9e\x63\xd8\x8f\xa0\xb2\x87\x71\x41\x77\x3c\x4c\xe5\x61\x38\x50\xd1\xce\x24\x8a\x63\x74\xa4\x2d\x77\xd1\x83\x53\x30\xa1\x3d\xa6\x61\xd1\x91\xb4\x6d\xc9\xf1\x80\x5e\x50\xe6\xc2\xcc\x89\x23\x04\x5a\xc9\xcb\x66\x87\x06\x5d\x2f\xa5\xfe\xb8\xe4\x04\xfa\x46\x2c\x90\x97\x07\xe7\x66\xf9\x95\x55\xcb\x1a\xa9\xd8\xa7\x21\xcc\x48\x54\xb6\x5e\xe3\x3a\x05\xfc\xe9\x0f\xbc\xfd\x58\xd5\x37\xef\x79\x8b\xec\x68\xd2\xb7\x3f\xbe\x82\x46\xbb\xd2\x41\x89\x02\x4b\x8f\x75\x90\x54\x57\xd7\x31\xec\x3d\x5d\x67\xf5\xc7\xa2\x3c\x8d\x9a\x32\x35\x9e\x3a\x65\xb6\x5c\x6e\x21\x61\x04\x62\x93\x69\xda\xd6\xc5\x36\xb8\xeb\x12\x28\xbe\xd1\x0c\x52\x30\x3d\x11\x78\xc1\xbd\xbe\x44\x67\x68\x64\x31\x63\x5f\x3d\xef\x33\xab\x36\xeb\x26\xf2\x90\x18\xd3\x28\xb4\xcb\x66\x6d\xb1\xe5\x6b\x56\xed\xdb\xc9\x98\xa8\x6e\x48\x75\x49\x20\xf4\x28\xba\x1b\x58\x7d\x07\xdb\x37\x2b\x3f\xae\x5c\x34\xee\x7f\x24\xfa\x44\x4e\x2a\x70\xbd\x81\x91\x5a\x30\x57\x88\x43\x0f\xd8\x6d\x83\x74\xfd\x8c\x27\x97\x2b\x98\xec\x6d\xd8\xfb\x1a\x62\xdf\x12\x77\x25\xac\xfc\x4d\xee\x53\x4c\xd6\x30\xf6\xa6\xda\x6d\x61\xdc\x89\x49\xe2\xb0\xc7\x12\x4c\xff\x9f\xc9\xa9\x2a\x5b\x72\xd2\xc9\xc3\xdf\xd0\xce\xee\x4d\x59\x7d\x2c\x97\x5b\xeb\x4c\x2e\x9d\xba\x9b\x6f\x21\xf6\x0e\xb5\x9b\x9e\x54\x3b\x7c\x6f\xbc\x7d\x11\x94\x65\x75\xc5\x54\x73\xda\x45\xb1\x62\xa2\xa7\x1a\x81\xaf\xfd\x11\x2a\x7c\x44\x66\xe8\x91\x45\x26\x85\x58\xf5\x1a\x2c\x32\x69\x38\xc5\xbf\x23\x59\xa0\x9e\x61\x2e\xec\x6d\xb5\xa9\xb6\x19\x73\xad\x82\xd9\x73\xd3\x58\x76\x59\xdd\x70\xb9\xd2\xba\x5e\x96\xfc\x28\xb4\x09\x12\x6f\xf8\x1d\x9e\x81\xb3\x01\x5d\x3e\x5b\xad\x17\xd0\xe5\x32\x48\xac\x0f\x36\x82\x6e\xa7\xda\x00\xd6\x00\x63\xbe\x4b\x37\x2f\x51\x22\xa5\x39\x91\xae\xf7\x07\xd4\x42\xe8\xc1\x3f\x10\xd8\x20\x02\x87\x3f\x33\x1c\x3c\x42\x1a\xb4\x40\x30\xdf\x5c\x1b\x01\x86\x4b\x7d\x7a\xe5\x02\xb8\x35\xd1\x83\xb3\x3b\x6a\xad\x73\xe4\x25\xfd\x4e\x0d\xc2\x07\xde\xca\x50\xe0\x9d\x1c\x57\x6e\x65\xe1\xbe\xa8\x67\x1c\x3a\xee\x99\x55\xea\x66\xa5\x68\x79\x75\xd2\x78\x7c\x76\xfa\xc8\x99\x69\x3c\x73\x38\x26\x63\x18\xce\x14\xe2\x19\x42\x30\x39\x50\x0c\x96\x5e\xe2\x94\x9e\xdd\x39\x1d\x4c\x06\xb4\x39\xd8\xb7\x01\xa7\x21\xdf\xdc\x85\x17\x2a\x24\xdc\x66\x9b\xbd\xca\x07\xc4\x2a\x72\x26\x03\x8f\x2e\xf0\x68\x02\xd8\xfc\xdf\x4d\x82\xa5\x32\x80\x48\x9b\xfd\x0a\x84\x9c\x9c\x4d\x85\x11\x75\x77\xc7\x89\x5e\x8b\xc2\x80\xdc\x76\x97\x7a\xab\x87\x1d\x08\x1e\x4d\xaa\xee\x8f\xe6\x2e\xfa\xc7\x1c\x3a\xb4\xd7\x00\xd2\x55\x6a\x6e\x64\x0b\x58\x7c\xd9\x06\xd2\x8d\x81\xdd\x53\xed\x3f\xe5\x69\xdd\x44\x48\x66\x2a\xb6\x50\x6c\xfd\x94\x0d\x91\x18\x55\x4a\x33\xbe\x94\x05\x84\x67\x18\x03\x2c\xf7\xbc\xb9\x1a\x76\x74\x62\x05\x4c\xd6\xe6\x5b\x74\x8d\xaa\x29\xda\xbb\xac\x6d\x21\x8a\x7c\xdf\xae\xa5\xa4\x48\x11\xc3\x6a\xe5\x75\x6d\xb7\xce\xe7\x4d\xbb\x2e\xca\x77\x65\xce\x5f\x8a\xe7\xb3\x40\xaf\xa2\xf4\x51\x9a\x6e\x7e\x53\x05\x06\x27\xd0\xcb\x5a\x70\x07\x62\x37\x47\x78\x43\x6a\x37\x55\x02\xae\x9d\x04\x49\xc2\x85\x7a\xd9\x8e\x0d\x5b\x2f\x2d\x51\x07\xda\x3b\x6c\x76\x54\xe5\x2a\x59\xb8\xab\xf1\xad\x6b\xce\x77\x52\xf7\xde\xc8\x65\x12\x80\x9f\x31\xc7\x29\x91\xd8\x2f\xe4\xf6\x3c\x7b\x03\x8d\x0d\x99\x3d\x85\x0d\x85\x0c\xb4\xae\x84\x5d\x8f\xac\x27\x61\x17\xbf\x8e\x44\x05\x26\x5c\x5b\x34\x74\xe9\x14\x95\x0a\x3c\xe4\xf3\x07\x7d\x3d\x55\x01\xb1\xab\x69\x6b\x57\x6c\xc6\x06\xe9\xe0\xcc\xad\x59\x9b\x6e\xf6\xec\x65\xbb\x2d\x57\x9d\x26\xb9\x55\x5c\x25\x29\x6c\x8e\x48\x49\x4c\xa5\xda\x97\x6b\x61\x5b\xaf\x0a\x6d\x59\xbb\x10\xd4\x77\x04\x6a\x15\xdd\xca\xcc\xec\x3c\x58\x88\xf2\x76\x95\xe5\x20\x3a\x04\x1b\xb4\xb3\x32\xb5\x04\xf2\x83\x9a\x71\x2c\xc5\x63\xa9\xf6\x28\x37\xa4\x88\x11\x03\x86\xd3\x04\x7a\x11\x81\xb8\xc8\xfa\x5d\x0a\xce\xad\x81\x59\x77\x53\x43\x16\xf4\xcf\x4d\xe8\x4c\xd7\xc1\x51\x5b\xd2\xb3\x9f\x2d\x1d\x5f\x6e\x47\x73\x65\x2b\xb7\x68\xa2\xc6\xc2\x19\xe3\xe4\x44\xd1\xb8\x75\xc2\x6a\x4a\x64\x98\x4a\x8b\xd2\x41\x11\x06\x09\x3e\x04\x95\x58\xee\x61\xf6\xe8\x2d\x8a\x63\xf0\xd4\x83\xbc\x0f\x83\x3b\xef\xdb\x0c\xa2\xc0\xbc\xa8\xf3\x0d\xc7\xd5\xf7\x92\xfd\x7d\x23\xee\x9f\xc1\x9b\x9c\x73\xc3\x60\x9e\x1c\x9c\x5a\x05\xa9\x5e\x0d\x31\x22\x0e\xa0\x6a\x4f\x7a\x3a\xd3\x68\xfa\x18\x34\x5a\x83\x89\xc9\xff\xda\x22\x0f\x2e\x13\xb3\x44\x48\x04\x2c\xac\x71\xef\xc5\xae\x83\x3c\x8a\xd9\x77\x39\x2c\x79\x31\xd5\xb7\xbe\x20\xa6\xb1\xee\x9b\xbd\x18\xbe\x6f\x26\xaf\x96\xb9\xf7\x96\x5d\x70\x80\xfa\xbb\xa7\xe2\x32\xef\x89\x02\x55\x64\xfc\x58\x6d\xee\xae\x0a\x91\x4d\x22\x80\x46\x04\xe2\xa8\x79\x6e\x6f\xff\x61\x89\xe0\xb0\xa0\x50\x78\xbd\xb1\x91\x79\xab\x78\x3c\x9f\x33\xd3\x52\xcb\x6b\x00\xc0\x47\x0e\x92\xe2\x6b\xb6\xba\x03\xd5\xb9\xca\xf6\x9b\x96\xa2\xc8\xaf\x21\x1a\x04\x58\x82\x25\x4c\x20\x1e\x32\x16\xed\x07\xfc\x63\x5d\x2f\xc5\xc7\xf0\xd4\x66\xdd\xe7\xf7\x66\x9d\x12\x4c\x32\x91\x55\xad\x89\xbe\x52\xab\x31\x7f\xf1\x70\xcc\xc8\x95\xba\xc9\xab\x9a\x7b\xd8\xbf\x7c\x04\xec\xb0\x8c\x3d\xbc\x5f\xfd\xbf\xba\x9b\xf9\xb5\xb0\x2d\xfd\xd7\x37\x9f\x8f\x80\x09\xdc\xf1\xfc\xfa\x31\x19\x65\xce\x14\xf3\x3a\x7e\xe5\xef\xc8\x1b\x84\x83\xd7\x1a\x87\x6f\x0e\x1a\xf9\x91\x93\xaa\x24\x23\x77\x4b\x3b\x06\xc0\x2e\xe7\x98\xce\xfa\x9c\x2d\x7e\x5e\x90\x63\xef\xaa\x2d\x74\x54\xc3\x3e\xd1\xee\x51\x20\xbd\x93\xdc\x81\x95\x91\xdf\xc2\x69\x50\xb9\x8b\x7d\xf7\x8d\x9e\x55\x47\x9c\xf4\x04\xd2\xbe\xb4\x36\x8f\x4d\x1a\xea\xd6\x08\x06\x4e\x88\x77\x65\x4b\xb9\xef\x05\xf9\xad\x18\x4e\xa7\xb7\x9a\x6a\x2f\xb1\xa5\x59\x16\xd9\x5f\xf6\xb6\xcf\xf5\x11\xc1\xc0\x26\x95\xae\x44\xe9\xbe\x03\x67\x59\xfd\x8d\x69\x7b\x0b\x5e\x1e\x40\x0c\x94\xf6\x0e\x03\x88\x69\x12\x31\x48\x76\x57\x53\xeb\xce\x20\x3d\xd2\x60\x66\x65\xa5\xc7\x9f\xa7\x75\xd4\xc3\x95\xa3\x7b\xec\x25\xac\x27\x4e\xe1\x51\x3f\x7e\xbc\xe2\x23\xbe\x7e\x85\xa3\x31\xdd\x71\x15\x53\x86\x0c\x24\x0b\xd1\x5a\xa4\x5d\x7e\xfc\x23\x9a\xbb\xf2\xc3\x77\xd1\x03\x0b\x47\x96\x22\x05\x81\xf3\x87\x14\x24\x89\x8a\x84\x4e\xd4\x13\xd5\xa0\xa7\x5a\x02\x35\xca\xc8\x59\x1c\xa7\x5a\x29\xa1\xdc\x9a\xa5\x9e\x79\x7f\xdd\x92\x40\x8d\xac\x5d\xe2\xeb\x98\x22\xa2\x33\x65\xfd\x7a\x68\x1d\xf3\x11\xc8\x88\x55\x56\xc7\xd6\x35\xf1\x35\xee\x28\x45\xec\x9a\xde\x23\xd4\x39\xf1\xa5\x75\x21\xec\x11\xe2\x75\xce\x00\xa5\x94\xaa\xe1\x7a\x67\x0f\x07\xf0\xd5\x53\xf7\x74\x86\xa6\x47\xd9\xe6\x98\xe9\xb8\x5e\x2a\x7e\xe0\xcc\xab\xfe\x87\xf6\x89\x55\x64\x70\x48\xfc\x4d\x61\x15\x24\x10\x30\x3b\x1e\xfb\x66\x6c\x40\x1c\x8b\x51\xb5\x2b\xba\x86\x3f\x6a\x03\xa9\xb9\x2b\x73\x6b\x7b\x19\x1f\x38\xfb\xcb\xf2\x91\x73\x3a\x58\xc3\x86\xae\x0c\xab\xfd\x5c\x5c\x00\x38\xd4\xa5\xb3\x8d\xcb\xfe\xd4\x35\x99\x9f\xf9\x91\xe6\x8b\xbd\x54\xe3\xfa\x95\xcc\x01\xa4\x53\x8f\x8a\xc0\xde\x74\x70\xcc\xa9\x2d\xa5\xd0\x11\x62\x12\xea\x29\x1e\x62\x96\x21\x3f\x51\x06\x63\x19\xe0\x15\x72\x25\xd9\x14\x0d\x98\x80\x7c\x65\x95\x18\x55\x19\x11\x33\x38\x6c\x57\xd5\x43\xbc\x05\xd0\x40\x32\x48\xb7\x3d\x4d\xdc\xf9\xa9\xc5\x23\x1c\x3d\xa7\x7c\x15\xa4\x44\xa1\xb9\xe6\xdd\x96\x94\x88\xdc\x3d\xb6\x02\x6d\xb1\x5b\xbb\x8b\xb0\x41\x0e\xd0\x73\x98\x56\x03\xe6\x2b\x31\xf9\x8b\xe2\xd9\xb3\xcb\xa9\x47\x3b\x74\x0a\x6d\xd7\x02\x6a\x59\x52\xc0\xf6\x45\x90\x20\x39\x85\x60\x34\x23\xdf\x6c\x39\x19\x51\xe0\x15\x4e\xfd\x39\x28\xab\xbf\x64\xbb\xbf\x05\x71\xa9\xcb\x4a\x34\x7b\xa8\xef\x02\xe1\x24\xee\x3e\x50\x11\x86\x2b\x57\x10\x80\xe4\xd7\x3d\x81\xb5\x73\xbe\x96\x1f\x77\x49\x07\xb5\x60\x8c\xe6\x20\x57\x04\xc9\xc1\x2a\x74\x9f\xf2\xc8\xb6\x5f\x53\xef\x40\xad\xa8\xea\xc1\x57\xd7\x9e\x7f\xfb\xf0\x02\x87\xcc\x5f\xbc\x12\xc7\xd9\xa3\xfe\xfe\xd4\x51\xa9\xfb\x63\xe6\xe4\xf2\x54\x44\x5f\x52\xfe\xda\x86\x58\x04\x0e\x59\x28\xaf\xda\x7d\x51\x74\x3c\xec\xb4\xfe\x23\xa6\x22\x48\xcc\x6b\x4a\x6a\x6f\x95\xe0\x75\x98\x27\x62\x3d\x8f\x2a\x13\x48\x04\x4e\x9d\xa0\xc3\xfa\x6b\x14\x0a\xba\xab\x07\xa4\x26\xf0\x2b\xdd\x3f\x10\xa1\x82\x55\x51\xe8\xb9\x40\x10\x2d\x3d\x04\x2f\x34\x6a\xe0\xa1\x6b\x09\x23\x42\xc5\x81\x53\x07\xf7\xbc\xa4\x10\x1e\xe0\xb8\x5b\x08\x9e\xdd\xe5\xe4\x3c\x5c\x5f\x99\xc1\x2f\x5f\x08\x1f\xd1\x5b\x85\xf1\x4e\x8a\xaa\x9b\x36\x38\xa9\xa5\xc7\x46\x39\x59\xde\x7b\xe1\x2e\xa8\xc8\x4b\xf7\xe8\xc5\x6f\x35\x8d\xdf\x6a\x1a\xd5\x60\x35\xe3\xb7\x3a\xc6\x6f\x75\x0c\x5d\xc7\xb0\x4f\x6e\xfd\x1f\x2b\x64\x0c\x15\x26\x5e\xd3\xd8\xc8\xa9\x4c\x58\x91\x09\x05\x74\x22\xce\x87\xfd\x20\xe8\x43\x22\xce\x23\x02\x4a\x61\x39\xfb\xe2\xc9\xf7\x16\x80\x1d\x4e\x9a\xce\x30\x94\xf9\xac\x68\x78\x4f\xda\x7a\xc3\xb7\xf7\x41\x0a\xf0\xf5\x80\xe8\xcd\x20\x7d\xe4\xe0\xcd\x8e\x10\xe4\x65\x1d\xcb\x2b\x3f\x62\xb0\x30\xb8\x63\x23\xec\x48\x17\x14\xc4\xef\x04\xe9\x5f\x06\xee\x37\x20\x3a\xc1\x77\xee\x0d\xd9\x51\x47\xfc\x5a\xd2\x49\x11\x58\xbb\xf7\xbc\x33\xe4\xdf\xba\x29\xe2\x97\x86\xcc\x65\x1c\x87\x15\xf1\x2b\x39\x7d\xd7\x71\xfc\x20\xab\xe7\x52\x4e\xf8\xc0\x8d\x7d\x7e\xe4\xe1\x21\xa0\xbc\xdd\x7a\xff\x08\x50\x91\xf5\x9e\xac\x50\xc7\xa4\xd1\xc5\x4a\xc0\x1c\x83\x36\xe2\xc4\xc9\x71\x06\xad\x37\x33\xee\x4c\x94\xbe\x4c\x21\xc2\xd2\xf0\x0f\xb3\x59\xe1\x9d\x38\xb2\x15\x8c\xbd\x30\x42\xf9\xc3\x99\xc5\xf1\xf9\x1c\x7f\xa9\xb8\x12\x3f\x70\xfe\x81\x5c\x92\x33\x69\x8d\x18\x68\xd6\x21\xf4\xcb\xaa\x24\xe6\x22\x17\x85\x64\xe0\x50\x94\x2d\xaf\x77\xd5\x46\xdd\x7f\x0c\xfc\x42\x1c\x25\x5f\xfe\x9a\x0c\xfa\xe6\x70\xae\x86\xd5\x77\x9d\x53\x99\x4a\xbc\x97\x4e\x91\x12\xf1\x89\x7b\x2e\x32\x54\x7a\x23\x5e\x50\xbe\x21\x6a\xeb\x5a\x09\x29\xec\x05\x4f\x80\xba\xa3\x8c\x3a\x05\x2a\x0f\x01\x52\xe9\xa6\xce\x91\xd0\x08\xb7\xf4\xe4\x04\x82\xb1\xa7\x2d\xdd\x39\xc9\x22\x17\x9e\x7c\xb3\xe7\x6e\xeb\x83\x66\xb2\x38\x6f\x46\xf4\x61\x6a\xad\x2c\x73\xd8\xda\x38\x46\x35\x29\x32\x3f\xaa\xd1\xde\x11\x66\x58\x72\x10\x51\xcd\x58\x53\xed\xe9\x6f\xa3\x75\xc7\x65\xea\x4a\x9c\x98\x71\xda\x35\x23\xe4\x63\xef\xfc\x0c\x7c\xf0\xed\x9f\xfc\xc1\x2f\x1c\xee\x02\x01\x2e\xc5\xcf\x84\xcb\x8d\x04\x89\x46\x3d\x16\x7b\x09\xf2\x47\xf6\xc3\x77\x2c\x23\x93\x90\xdd\x67\x16\xb2\x31\xd7\x26\x42\x66\x9a\x92\x79\x6e\x61\x1c\x0c\xf2\x0e\x96\x80\x24\x26\x5b\x46\x2e\xfd\xe2\x44\xb2\xfd\x88\xca\x8c\x2e\x64\x60\x4b\xcc\x10\x05\xb2\x64\x37\xcf\x82\xde\x9e\x04\x4d\x02\x05\x4c\xff\x9d\xcf\xef\x07\xdf\xd2\x80\x31\x65\xc6\x12\x08\xfc\xed\x36\x2b\x26\x37\x4d\xb1\xeb\x2a\x3a\xf2\x76\xb8\xa3\x6f\xba\xc5\x56\xef\x11\x4a\x40\x06\xd1\x88\xc7\x0a\xff\x08\xc6\x9f\xdc\x8b\xf1\xe2\x2c\x33\x9e\x54\xa7\xe9\xa5\x63\xa4\x1a\x81\xdb\xdc\x5c\x06\x16\xcb\x27\xa1\xd4\x77\x78\xb4\x2a\xcc\x06\x6f\x2d\x8a\x34\xb5\x72\x4c\x9b\x63\xad\x8c\x77\xef\xfe\xab\x06\x58\xa9\xff\x13\x00\x00\xff\xff\x2e\xb5\x5d\x6b\xe6\x66\x00\x00")

func builderJsBytes() ([]byte, error) {
	return bindataRead(
		_builderJs,
		"builder.js",
	)
}

func builderJs() (*asset, error) {
	bytes, err := builderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builder.js", size: 26342, mode: os.FileMode(420), modTime: time.Unix(1475617010, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dockerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4f\x6f\x9b\x30\x14\xbf\xf3\x29\x9e\x7a\x81\x48\x51\xba\x5d\x57\xe5\xb0\xa5\x93\x96\xd3\xa6\x4e\x3b\x4d\x53\xe4\x99\x97\xc6\x2b\xd8\xec\xd9\x4e\x5b\x35\xf9\xee\xb3\xc1\x10\x08\x84\x96\xe5\x82\xc0\xbf\x7f\xfe\x3d\x07\xf6\x8c\x60\x03\x4b\x20\xfc\x6b\x05\x61\x12\x5b\x99\x22\x69\xae\x08\xe3\xd9\x4d\x14\xf9\xf5\x54\xf1\x07\x24\x07\xca\x55\x6a\x33\x5c\x6c\x36\xd5\x93\x05\x27\x64\x06\x93\x1a\xf7\x48\xac\x70\xa8\xad\x95\xdc\x08\x25\x21\xc9\xd1\xec\x54\x3a\x07\x55\xf8\x7b\x3d\x07\xfd\x2c\xf9\x0c\x5e\x22\x70\x3f\xb1\x85\xa4\x7d\xef\x7f\x84\xc6\x92\x0c\x86\x3f\x2b\xfa\xaf\xa4\xa1\x1b\xb2\xe8\xcc\x3c\xf2\x18\xb5\xf0\x12\x1f\xe1\x1b\xa9\x5c\x68\x4c\x4e\xee\x84\x5a\x65\x7b\x9c\x3b\xd4\x1f\xe4\xc6\xfb\x34\x46\x97\x1c\x4e\x6c\x24\xf2\x4c\x6d\x33\xd3\x4e\x58\x27\x77\xcb\xb3\xda\xbe\xd2\x2f\x1f\xdd\x74\x80\x21\x41\x12\x64\x4e\x8b\xc7\x7a\x17\xee\x7a\x8c\x22\x7c\x2a\x14\x19\x1d\xfa\xec\x54\x38\x58\x5d\xf0\xf5\x7d\x27\x57\xab\x92\x74\x75\xde\x72\x5b\xf7\xb7\x15\x59\x3a\x51\xf6\x93\xe7\x8c\xaa\x6a\xc3\xc8\x74\x54\x25\xcb\xb1\x2b\xe9\x8f\x45\x50\x70\xc8\x97\x63\x33\x79\xf3\x5c\xa0\xda\x82\x67\xc0\x72\xb9\x84\xb8\x56\x89\xdb\x6d\x07\xea\xa2\x82\x95\xe8\xaa\x37\xc0\x4c\x63\x1f\x18\x30\x03\x47\xa4\xdc\x54\xfc\xdd\x47\x8e\xcf\x37\xd5\x99\x01\x3e\x21\x9f\x56\x55\xfc\xd9\x51\xc6\x45\x99\x31\x8c\xef\x26\xca\x7e\x2c\x49\xe3\xc2\xda\xa8\xe2\x95\x11\x9c\x15\xa0\x0a\xa7\x78\x2a\xce\xe3\x3f\xb4\x8a\x1d\x32\x21\xcc\xd5\x1e\xd7\x39\xbb\xc7\x9e\xd7\x57\x5a\xa7\x23\xa7\xe8\xee\x44\xbd\x1a\xb6\x2d\x05\x9a\xe7\x5b\x45\xdc\x2d\xf8\x3f\x7a\x27\x4f\x3f\xce\x50\x92\xdb\x79\x25\xf0\x6a\xa0\x95\x92\x86\x09\x89\x74\x39\xd4\x6d\x2f\x54\x79\x81\xc3\x01\xb6\xcc\x1d\xbe\x5e\xbc\xeb\x6b\xf8\x61\x44\x26\x8c\x10\xa8\x9b\xb0\x3b\xa6\x87\x8b\x1b\x19\xd2\x97\xc0\x79\xcb\xa0\xda\xc5\x38\xaf\x66\x63\x13\x07\xe5\x3d\x1b\xee\x05\x5f\xaf\x70\xd1\x5b\xe8\x3b\x2b\xa5\x90\xf7\x53\x8d\xd7\x35\xf1\xbf\x5c\xa5\x2e\xdc\xab\x77\xb2\x67\x45\x7b\xab\x63\xf7\x1d\xbd\x43\xfe\xd0\x31\x64\x69\xea\x3e\x15\x5c\x59\x69\xce\xdc\xc2\x67\x72\xe5\x29\x6d\xd8\xe1\xf0\xfe\x9d\x57\x05\xf8\x17\x00\x00\xff\xff\x49\x4a\x10\x3d\x7f\x07\x00\x00")

func dockerJsBytes() ([]byte, error) {
	return bindataRead(
		_dockerJs,
		"docker.js",
	)
}

func dockerJs() (*asset, error) {
	bytes, err := dockerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docker.js", size: 1919, mode: os.FileMode(420), modTime: time.Unix(1475160023, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"builder.js": builderJs,
	"docker.js": dockerJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"builder.js": &bintree{builderJs, map[string]*bintree{}},
	"docker.js": &bintree{dockerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

