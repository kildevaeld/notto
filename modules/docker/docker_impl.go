// Code generated by go-bindata.
// sources:
// builder.js
// docker.js
// DO NOT EDIT!

package docker

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _builderJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3c\x6b\x73\xe3\xc8\x71\x9f\xf7\x7e\xc5\x88\xe5\x58\xe0\x2d\x0d\xad\xf6\xde\xa2\x75\xae\xf3\x66\x5d\xb9\xaa\xd8\xeb\x3a\xf9\x4b\x4a\xa5\x62\x81\xe0\x48\x42\x44\x02\x0c\x00\x6a\x57\xf1\x31\xbf\x3d\xdd\xf3\x42\xcf\x0b\x00\x25\x5e\x52\x89\x8f\xb5\xb5\xa4\x30\x3d\x3d\x3d\x3d\x3d\xfd\x9a\x1e\x6c\xaa\xd5\x6e\xcd\x53\xfe\x69\x5b\xd5\x6d\xc3\x2e\x3f\x3b\xfb\x5c\x7c\xce\x58\x72\xbb\x2b\xf3\xb6\xa8\xca\x44\xc2\x34\x53\xf6\x77\x76\x76\xc6\x3e\xf2\xe5\x36\xcb\x1f\xfe\x58\x55\x6d\xd3\xd6\xd9\xb6\xeb\xf1\x0a\x5a\xff\x76\xcf\x99\x84\x67\x79\x96\xdf\x73\xd2\xfa\x98\xd5\xac\x28\x9b\x36\x5b\xaf\xf9\xea\xcf\x12\x27\xbb\x64\x7f\xdf\xcf\x3f\xf3\x71\xd4\xfc\x3f\x76\x45\xcd\x99\x26\x82\x40\xe8\x47\x6c\xb1\x50\xb4\x2c\x14\xf4\x62\xa1\x68\xfd\x71\x05\xc4\x52\xac\x88\xf6\xdd\x3d\xcf\x1f\x58\x71\xab\xe9\x2b\x1a\x20\xc7\xa3\xf2\x55\x71\x9b\xb8\x54\x5e\x6b\xac\x37\x53\x0a\xf9\xaa\xe6\xed\xae\x2e\xbd\x49\x75\xe0\x9a\xaf\x73\x8f\x96\x9a\x67\x2d\x67\x19\x2b\xf9\x47\x4d\x4f\x92\x95\x2b\xb6\xdd\xb5\xac\x80\x7f\x65\x5b\xb1\xf6\x5e\x31\xd1\x1a\x15\xd9\xa8\x7a\x5c\xf6\x0c\x8d\x9c\xb5\x88\x55\xa4\x5c\x00\xc3\x67\x56\x43\xb1\xba\x60\xba\x9b\xdd\xb2\xae\xb2\x15\x87\xd6\xdb\x6c\xdd\x58\x3c\xda\x7b\x13\x7a\xff\x89\xe7\x3b\x98\x51\xdb\xad\x7f\x60\xe9\x5e\x6d\x3c\x0e\xe5\x40\x7e\x62\x4b\xe1\x4c\x61\xd0\xdf\xdd\xf3\xc0\x8a\x4f\x3d\x52\xfe\xb4\xce\xee\x28\x1d\x59\xc3\xe4\x44\x7c\x42\x52\xd9\x00\xbc\x6a\xeb\x1d\xf7\x30\xfd\x24\xd7\x17\x71\xe9\x0d\x52\xdd\x12\xd4\x14\x5c\xc9\x82\x4d\xf1\x9c\x40\xec\x3f\x73\xc4\x1c\x61\x1a\xca\x31\xc0\xbe\xfc\x77\x9e\xb7\x2c\xe9\xe6\xa9\x5a\x60\x9e\xa4\x73\x80\x0d\xe9\x06\x26\xa1\x80\xdd\xfd\xe4\x0d\xe4\x09\x7d\x08\x61\x1e\x10\x2f\x17\x73\xd7\x6f\xbb\x5b\xae\x8b\x7c\xb1\xcd\xda\xfb\xc5\x62\x00\xf3\x16\x30\x4f\x26\x2e\xae\x7f\x85\xa5\x60\xbc\x6c\xeb\x27\xb3\x70\xb0\x1f\x14\x5b\x15\x3f\x49\x0f\xd5\x10\xd2\x01\x6f\xa6\x84\xef\x7b\xc3\xb8\x97\x7f\xce\x88\x76\xbc\x86\xdf\xec\x0d\x53\xcf\xce\x98\xa3\x2d\x67\xac\x57\x68\x51\x3b\xbd\x9a\xec\x60\x55\x40\x87\x16\x79\x0b\xdc\xa0\x7a\x4d\xf6\x4d\x36\x08\xf7\x8a\xc1\xe7\xb6\xaa\x59\x82\x3b\x7f\x8b\x3a\x0b\x9e\x83\x1a\x4b\x4e\xd4\x10\xe9\x7d\xd6\x7c\xf8\x58\xfe\xb5\xae\xb6\xbc\x6e\x9f\x92\xed\x74\xaa\x47\xbf\xde\xa2\x22\xd8\xc0\x17\x0c\xb0\xff\xec\x95\x41\x1d\xe2\xdb\xf9\x14\x37\x93\x9a\x8f\x50\x12\xec\xfc\x98\x13\x44\xfa\x91\x80\x96\x97\x2b\xd4\xfc\x49\x7b\x0f\x3a\xf8\xb7\xbf\x65\xf8\x9d\x9a\x96\x29\xfb\xf9\x67\x33\x1a\x4b\x56\x33\xb6\x8c\xf0\x61\x29\xf9\xb0\x0c\x31\x60\x25\xa7\xbe\x94\x53\x17\x7d\x3b\xfe\x26\x68\xcb\xc4\xa8\x79\x05\x22\x5e\xef\xf2\x16\x10\x5f\xb2\xd5\x9c\xed\x25\xf0\x2a\xdd\xd6\x55\x5b\xb5\x4f\x5b\x54\xb3\x4b\x76\x79\x79\xc9\xca\xdd\x7a\xcd\xfe\xc0\x3e\x88\x4d\x9a\xe6\x42\x85\x27\x40\xc3\x05\x6e\x58\x1b\xbe\xfb\x6b\x26\x54\x3c\x0e\x39\xc5\x25\x50\x6c\xe0\x8f\x20\xe9\xcd\xe2\x1c\x60\x43\x2b\xf1\x76\xaa\xd9\x15\x01\xf8\x42\x03\xec\xda\x62\x1d\x45\xf3\xa5\x86\x2a\xca\x15\xff\x14\x05\xfb\x4a\x83\x21\xbd\x71\xa2\xbe\xd1\x60\xc0\xb3\xdb\xe2\x2e\x0a\x77\x7e\xae\x01\x57\x55\xfe\xc0\xeb\x08\xd8\xb7\x08\x95\x74\xeb\xfc\x97\xaa\x2d\x6e\x8b\x3c\xc3\xbf\xcc\x7a\xd3\x87\xd7\xd6\x1f\x93\xab\x36\xab\xdb\xa2\xbc\x9b\xe0\x32\xbf\xc1\xff\xba\x47\xf3\x71\xbd\xf9\x4a\x74\x3e\xef\x3a\xc3\x93\x91\x7d\xdf\xd7\x75\x55\x8b\xee\x6f\xbb\xee\xf2\xe1\x18\x0c\xd5\x76\xab\x69\xff\x42\xf5\x57\x8f\x46\xf6\x56\xb4\x7f\xd9\x75\x1e\x45\xfb\x0f\x6b\x10\xdb\xd5\x13\x9d\xfe\x57\x02\x85\xd3\x30\x8c\xe9\x8f\xbb\x62\xbd\xd2\x73\xf8\x5a\xe0\x30\x8f\x46\xf6\x16\x5d\xbf\xe9\xba\x8e\xed\xd7\xf1\xfe\xdb\xae\xf3\x68\xde\x3f\x14\x1d\xef\xbf\x93\xec\xd3\x8f\x86\x7b\xff\xc4\x37\xd5\xa3\xee\x7d\x2e\xc5\xce\x3c\x1b\xd9\x5d\x8b\xdd\x79\xd7\x7b\x14\xc7\xf5\x38\x3f\x6e\xb2\x3b\x2e\x51\xbc\xb5\x08\x90\x0d\xa3\xa9\x20\x78\xbe\xa0\xa4\x8c\x45\x23\x9c\x58\xc3\x0b\x29\x89\xe6\xd9\xc8\xee\x9a\x17\x5f\x75\xbd\x25\x2f\xf6\xd3\x44\x9b\x37\xda\x0d\x6d\x43\xb8\x01\x23\x89\xa9\xd6\x3c\x4e\x4b\xa8\x03\x40\xc2\xbf\x50\xcb\x7b\x54\xce\x48\x4e\x49\x1e\x6a\x03\x86\xe8\x1c\x34\x46\x87\x35\xbc\x2e\x78\x93\x64\x75\x3d\x03\x27\x9e\xd7\x19\x58\x95\x19\x43\x0f\x77\x09\xba\xcf\x28\x35\xfd\x00\x30\x99\x9f\x96\xc9\x43\xeb\xb4\x57\x0c\x14\x86\xfe\x87\xba\xce\x9e\xd2\xa2\x11\xdf\x88\x5f\xd8\xc8\x13\xf8\x91\xae\x79\x79\xd7\xde\x1b\xdc\xf8\x51\xae\x11\x98\xc3\x4d\xd1\xf0\xb4\xe6\x4d\xb5\x7e\xe4\xc9\x54\x61\x54\x16\x4e\x6a\xf2\xcd\x76\xcd\x5b\xe1\x01\xbf\x51\xcd\xaa\x37\x5a\x2d\x85\x81\x28\x69\x85\x6b\x06\x50\x68\x04\xad\x61\x85\xa1\x11\xb3\x46\x13\x68\xcd\xa6\x03\x12\x53\x52\xac\xc1\x89\x5c\x1b\x12\x6e\x66\xa4\x0f\xc7\x29\x3a\xdd\x34\x37\x62\x6d\x94\xb5\x02\x68\xde\x0f\xe3\x12\x69\x58\xee\x7e\xe4\x5c\x63\x28\xf7\xfe\x23\x0e\xe1\x52\x8c\xc2\xd7\xaf\xcd\x8c\x23\xc3\xe1\x1c\xbb\x85\xf9\xfe\x92\x45\x96\xd9\x27\xd3\x5e\xe7\x11\x84\x0e\x11\x2b\xc8\x91\x4b\x7a\x08\x5a\xe7\xd1\x9e\x76\xa5\x4c\x76\x51\x0b\xc0\xbd\xd8\x97\x44\xe6\xfe\x96\x35\x0f\x60\x96\x5a\x6e\x66\x6f\x9e\x5c\x77\xbf\x26\x57\xbb\x3c\xe7\x4d\x43\xdd\x01\xf5\x64\xde\xd3\xab\x33\x25\x52\x1b\x5b\x56\x24\x3c\x0e\xb5\x1f\x6f\x3d\xfb\x41\xf4\x96\xe9\x64\x29\xad\xee\xa9\xa5\xb1\xe8\x63\x0f\x94\x2a\x99\x96\x37\x6d\x22\x5d\xb0\x19\xdb\xae\xb3\x16\x7c\xe2\x0d\x78\xe3\xe5\xa3\xe1\x8f\xda\xc2\xda\x4f\x4b\x9b\xac\x2c\xda\xe2\x3f\x79\xa4\x9b\x64\xba\x1e\x14\xf1\x63\x40\x0c\x5f\x8a\x34\x61\x5e\x85\x1f\x47\x56\x65\xd1\xec\xc0\xd9\x36\x43\x1a\xef\x3d\x51\xd0\x10\x16\x48\x08\xd7\xfb\x56\xed\x3a\xab\x64\x53\x2e\x50\x89\x7e\x32\x31\x80\x3e\x3a\x95\x1e\xe1\xb3\x6f\x4c\xee\xc8\x04\xbc\x36\x00\x60\x44\x2e\x96\x8f\xb6\xc6\x53\x23\x77\xbe\x79\xba\xc4\x27\x96\x1e\x00\xae\xe4\xdc\x22\x07\xb7\xa3\x78\x2a\x62\x80\xc7\xaa\x58\xb1\x37\xa8\x2d\xd4\x33\x99\x1c\x99\x53\x99\xaf\x75\xda\x00\xa3\x1a\x31\x84\x42\xab\xc9\x99\xc7\xe8\x59\x8c\x21\x48\xc4\x05\x22\x74\xba\x14\x63\xcc\xed\x26\x81\x42\xb7\x69\x5e\xa5\x9b\x6c\x4b\x16\xaf\x69\xf9\xd6\x57\xcb\x68\x69\xb0\x45\xb2\x65\xea\xef\x6b\x6d\x1a\x20\x0e\x72\x94\x81\x6a\xc1\xde\x74\xaf\x4f\xd3\xdb\x62\x0d\x9b\xdc\x1f\x9a\xf6\x60\x27\x32\xb6\x9a\xdb\x9a\x42\x84\x76\x62\x32\x4a\xfb\xc1\x02\x08\xd6\x07\x87\x76\xad\x9d\xd9\x3b\xa9\xde\x9d\x96\x16\xb2\x79\xd6\x02\x70\x33\x0f\xac\xb9\x37\x9a\x80\xc4\x08\x4f\x12\x66\xb3\x75\x43\x26\xa6\x42\x2e\xc9\x4b\x24\x06\x5a\x9d\x09\x12\x22\x42\x4a\x78\x70\xa8\xb0\x79\x94\x41\x17\x86\xc4\xc2\x8f\x4b\x36\x69\x81\xdf\x33\x91\xe2\x9a\x46\x2d\x48\x1f\xd9\xa3\x8c\x5e\x5c\x38\x42\x62\x40\x59\xb5\x89\x08\xc0\xde\x5e\x10\xc1\x0f\x4b\x14\x8e\x20\x08\x52\x5f\x6c\x8a\x36\xe8\x54\x0a\x4f\x10\x22\xf8\x54\x47\x36\x33\xb9\x2a\x3d\xeb\xbe\xc1\x2d\x87\x13\xa1\xa3\x38\xa4\x09\xcd\x36\x88\xa7\xde\x95\x89\xd8\xe7\x33\xb9\xdd\x53\xa1\xab\x11\xb3\x3d\xef\xb4\xbd\xe7\xa5\xb5\xc3\x60\xb2\x8d\xb7\xd0\x8b\x43\xa6\x3a\x23\x52\xe7\xae\xbf\x22\x90\xf0\x55\xda\x59\x6b\xe3\x0f\xaa\xba\x06\x03\x4d\x4b\xd3\x65\xbb\xb6\x12\x70\x63\xb5\x1d\x0a\x85\xe9\xe4\x68\x67\xf2\x3c\xa0\xa1\x11\x29\x4c\xa3\x5f\x49\xd2\xd5\xe8\xdf\x54\x8e\xdc\x0a\x8d\xb2\x5c\x02\x76\xe8\x3d\x24\xfa\x48\xb6\x26\xd0\xd5\x7e\x80\x44\xcb\xfb\xf7\xec\x0d\x66\xca\x4e\xc2\x4c\x92\x92\x5c\x57\x1f\x85\xdb\x2e\x7c\x98\xe4\xf4\xdf\xaa\x1d\xbb\xcf\x1e\x39\x6b\x2b\xb9\x9a\xec\xb6\xa8\x9b\xf6\xb4\x4f\x05\xf9\xa3\xc6\xf4\xad\x60\x9c\x34\x6e\x01\x4b\xe1\xca\x24\x4e\x59\x0a\xe0\x42\x2c\x7c\xd2\xa3\x0b\x23\xfb\xd8\xea\x3d\x46\xbe\xaa\x6d\x3c\x0c\xe9\x91\xaa\x67\xc7\x3f\xf8\x59\x58\xf2\x04\x26\xe4\x7d\x96\xdf\x8f\x52\xdb\x27\x4a\xc4\x8a\xe6\xa7\x5d\x59\x82\xaa\x01\x19\x2b\xb3\x8d\xd1\xdb\x7d\x5a\x3b\xa0\xa0\xc7\xee\x76\x9d\x76\x9a\xb1\xa0\x9e\x57\x19\x41\xd4\x45\xff\x52\x55\x0f\xc9\xe9\x16\x38\x00\x5d\x4e\x01\x5e\x0b\xbf\xdf\x4b\x4d\x05\x01\xed\x59\xbc\x94\x50\xbe\x1a\x4d\x67\xd5\xb4\xfd\x84\xda\xe2\x37\x2c\x50\xb5\x48\x8e\xf8\xbe\x19\x84\xfa\xa8\x0a\x9a\x43\xb4\xd6\x61\xfe\x24\xf6\x90\x63\x38\x5d\xf4\xc3\x88\x86\xcb\x9f\xa3\xdf\xde\x55\x65\x9b\x15\x25\x3a\xe8\xd6\xca\xd9\xfc\x42\xd4\xb9\x8b\x0f\x38\x11\x74\x2a\x51\xc9\x49\x12\xe3\x3e\x65\x2c\x59\xa1\x3f\x78\xbc\x65\x6d\xae\xeb\xe2\x66\xfe\x3c\x03\xa7\xb3\x65\x01\x51\x0a\x89\xbb\x5c\xf7\xb8\x1c\xd9\x1c\x94\xd0\x86\x77\xd2\x89\x1c\xa5\x1f\x9f\xbf\x35\x54\xda\xee\x90\xad\x31\x34\x29\xbd\x74\x4a\xc2\xc0\xf2\x6c\x54\x54\x30\xe0\x3f\x5a\x6c\xb0\x6c\xe5\x08\x37\x32\xbc\x25\x09\x76\xea\x40\xe5\x23\xc2\x29\x79\x46\x63\xed\x59\x10\x1f\x6f\xa7\xf2\x4f\xf9\x7a\xb7\x42\xb8\x6b\xc9\x9d\x5d\x09\xac\x11\x8b\x6f\x7e\x89\xd9\x8b\xdf\x00\xa0\xfe\xb0\xa9\x3f\x35\x20\x2b\xbe\x85\x50\x98\x97\x79\xc1\x1b\xd1\x05\xf6\x15\x57\x78\x84\x01\xd3\x78\xcc\x1f\x05\x06\xe8\xd9\x1a\x62\xf4\xd3\x1b\xc7\x93\xa8\x50\xf2\xd3\x0a\xa5\x00\x68\x9f\x69\x62\x5d\x5f\xa1\x4a\x1f\xab\xf5\x6e\xe3\x47\x2c\x55\xba\x2c\xe4\x79\x9b\x06\x09\x9b\xdd\xb3\xcf\xc5\x5e\xad\x56\x91\x85\xae\xe4\x32\xca\xa8\x5b\xfe\x26\x78\x3a\xf7\x61\x2c\x06\xdc\x20\xec\x35\x9b\xfc\xae\xa0\xe9\x66\x82\x6c\x28\xce\x13\x49\xb9\xce\xdf\x99\x94\x95\x54\x88\x17\x6c\x02\x78\x2b\x31\x00\xb5\x9b\xfb\xcf\xcf\xba\x3f\x02\xb3\x99\xd3\xd6\x2d\x9e\xf5\xe9\xb2\x00\x57\x0c\x95\x90\xab\x13\xc0\xca\xde\x42\x3d\xe2\xe8\xfb\xbc\x16\x8f\xcc\xe1\x66\x81\x29\x2c\xd0\xa6\x85\xab\xc0\xa5\x5b\x36\x07\x80\xdf\x43\x2b\x7c\xbf\x7e\xed\x71\x59\xd5\x87\x38\x5d\x7d\x75\xa9\xd7\x4a\x08\x67\xdc\x2d\xb1\x53\xcf\x5d\x87\x88\x43\x62\x00\x70\x33\x99\x3f\xdc\xb1\x0d\xf6\x93\x93\xff\x32\x40\xa9\x88\x3d\x3f\xdc\x26\x26\xd8\x89\x2a\x9b\xb1\x3e\x83\x0a\xf8\x44\x21\x49\x34\x1d\x0c\x06\xaf\x28\xad\x65\xd6\x1f\x57\x3d\xf9\x8c\x16\x42\xdc\xc9\xf3\xdc\x87\xa0\x26\x15\x4f\x98\x03\x86\x96\x98\x59\x58\x74\xed\xff\x75\xc0\x9d\x4b\x18\x77\xa5\x84\xb2\xd6\x70\x41\xbe\x8d\xe4\x99\x7d\x0e\x18\xe5\x5c\x84\x6b\xfb\x40\x4a\x89\xce\xf5\x25\x94\xe9\xa3\xa5\x28\x4d\x21\xeb\x2d\xf7\xe8\xa9\xe8\x13\x37\x75\x32\xb6\x50\xfb\x39\x86\xfd\x00\x2a\x7b\x18\x17\x34\xc7\xc3\x54\xee\x87\x1d\x15\x6d\x4c\xa2\x38\x46\x7b\xda\xf2\x14\x3d\x38\x05\xe3\xda\x63\x18\x16\x1d\x49\xeb\x96\x1c\x4b\xee\x82\x6b\x2e\xd4\x9c\x28\x21\xd0\x42\x5e\x36\x5b\x54\xe8\x7a\x2b\xf5\xfb\x25\x27\xd0\x37\xa2\x81\xbc\x38\x38\x37\xdb\xaf\xac\x5a\xd6\x48\xc1\x3e\x0d\x61\x46\xa2\xb2\xd5\x0a\xf7\x29\xe0\x4f\xff\xc2\xdb\x8f\x55\xfd\x70\xc5\x5b\x64\x47\x93\xfe\xf8\xd7\x1f\xa0\xd1\xce\x74\x50\xa2\x40\xd3\x63\x1e\x24\xd5\xd9\x75\x74\x7b\x4f\x57\x59\xfd\xb1\x28\x4f\xa3\xaa\x4c\x8d\x27\xb9\xb0\x81\x68\x11\x28\x4d\xa6\x69\x5b\x17\x9b\xe0\x91\x4b\x20\xf3\x46\xc3\x47\xc1\xf1\x44\x20\x05\xdb\x7a\x81\x96\xd0\x2c\xc4\x8c\x7d\xfd\xa6\x4f\xa7\xda\x7c\x9b\xc8\x9a\x2f\xa6\x51\x68\x7b\xcd\xda\x62\xc3\x57\xac\xda\xb5\x93\x31\x2e\xdd\x90\xdc\x12\x2f\xe8\x28\x82\x1b\xd8\x7a\x7b\xdb\x30\x2b\x23\xae\xec\x33\x1e\x7e\x24\xba\x1c\x27\x15\xb8\xde\xc3\x48\x2d\xe8\x2a\xc4\xa1\x07\xec\xce\x40\xba\x7e\xc6\x8c\xcb\xed\x4b\x0e\x36\xec\x43\x0d\x71\x68\x89\x47\x12\x56\xf0\x26\x0f\x29\x26\x2b\x18\x7b\x5d\x6d\x37\x30\xee\xc4\x44\x70\xd8\x63\x01\x7a\xff\x4f\xa4\xe6\xca\x5e\x39\x69\xe1\xe1\xff\xd0\xb1\xee\x43\x59\x7d\x2c\x17\x1b\xab\xc4\x96\x4e\xdd\x0d\xb6\x10\x7b\x87\xda\x8d\x4d\xaa\x2d\x7e\x37\xde\xa1\x08\xae\x65\x75\xcb\x54\x73\xda\xb9\xb0\x62\xa2\xa7\x1a\x81\x2f\xfa\x11\x2a\x7c\x44\x66\xe8\x91\x19\x26\x85\x58\xf5\x1a\xcc\x30\x69\x38\xc5\xbf\x03\x59\xa0\x9e\x61\x20\xec\x9d\xb3\xa9\xb6\x19\x73\x55\x82\x39\x70\xd3\x58\xb6\x59\xdd\x70\xb9\xd3\xba\x5e\xd6\xfa\x51\x68\xe3\x21\x3e\xf0\x27\x2c\x80\xb3\x01\x5d\x3e\x5b\xad\xd7\xd0\xe5\x26\x48\xac\x0f\x36\x82\x6e\x27\xd5\x00\xda\x00\x1d\xbe\x1b\x37\x28\x51\x4b\x4a\x03\x22\x9d\xec\x0f\x88\x85\x90\x83\x7f\x26\xb0\x41\x04\x0e\x7f\x66\x38\x78\x84\x34\x68\x01\x4f\xbe\xb9\x37\x0b\x18\xce\xf3\xe9\x9d\x0b\xe0\xd6\x44\xf7\xce\xd1\xa8\xb5\xcf\x91\x97\xf4\x6f\xaa\x10\xee\x78\x2b\xfd\x80\x0f\x72\x5c\x79\x8e\x85\x87\xa2\x9e\x72\xe8\xb8\x67\x76\xa9\x1b\x92\xa2\xe6\xd5\x11\xe3\xe1\xa1\xe9\x91\xc3\xd2\x78\xd8\x70\x48\xb8\x30\x1c\x26\xc4\xc3\x83\x60\x64\xa0\x18\x2c\xad\xc4\x29\x2d\xdc\x39\x1d\x8c\x04\xb4\x3a\xd8\xb5\x01\xa3\x21\xbf\xdc\x8d\x17\xca\x22\x3c\x66\xeb\x9d\x0a\x06\xc4\x2e\x72\x26\x03\x8f\xae\xb1\x2e\x01\x74\xfe\x6f\x26\xc1\x3c\x19\x40\xa4\xcd\x6e\x09\x8b\x9c\x9c\x4f\x85\x12\x75\x8f\xc6\x89\x5c\x8b\xac\x80\x3c\x73\x97\x72\xab\x87\x1d\xf0\x1c\x4d\x9c\xee\x8f\xe6\x6e\xfa\x63\x0e\x1d\x3a\x68\x80\xd5\x55\x62\x6e\xd6\x16\xb0\xf8\x6b\x1b\x88\x35\x06\x8e\x4e\xb5\xfd\x94\xa5\xba\x89\x58\x99\xa9\x38\x3f\xb1\xe5\x53\x36\x44\x1c\x54\xb9\x9a\xf1\xad\x2c\x20\x3c\xc5\x18\x60\xb9\x67\xcd\xd5\xb0\xa3\xa3\x2a\x60\xb2\x56\xdf\xa2\x6b\x54\x4c\x51\xdf\x65\x6d\x0b\x5e\xe4\x55\xbb\x92\x2b\x45\x32\x18\x56\x2b\xaf\x6b\xbb\xf5\xec\xac\x69\x57\x45\xf9\xa1\xcc\xf9\x85\x78\x3e\x0b\xf4\x2a\x4a\x1f\xa5\xe9\xe6\x37\x55\xa0\x70\x02\xbd\xac\x0d\xb7\x27\x7a\x73\x84\x35\xa4\x7a\x53\x45\xdf\xda\x48\x90\x08\x5c\x88\x97\x6d\xd8\xb0\xf5\xc6\x5a\xea\x40\x7b\x87\xcd\xf6\xaa\x5c\x21\x0b\x77\x35\xb6\x75\xc5\xf9\x56\xca\xde\x7b\xb9\x4d\x02\xf0\x33\xe6\x18\x25\xe2\xfb\x85\xcc\x9e\xa7\x6f\xa0\xb1\x21\xb3\xa7\xb0\x21\x97\x81\x26\x95\xb0\xeb\x81\xc9\x24\xec\xe2\x27\x91\xe8\x82\x09\xd3\x16\x75\x5d\x3a\x41\xa5\x0b\x1e\xb2\xf9\x83\xb6\x9e\x8a\x80\x38\xd2\xb4\xa5\x2b\x36\x63\x83\x74\x70\xe6\xd6\xac\x4d\x37\x7b\xf6\xb2\xdd\x5e\x57\x1d\x26\xb9\x29\x5c\xb5\x52\xd8\x1c\x59\x25\x31\x95\x6a\x57\xae\x84\x6e\xbd\x2d\xb4\x66\xed\x5c\x50\xdf\x10\xa8\x5d\xf4\x28\x23\xb3\xcb\x60\x16\xca\x3b\x52\x96\x83\x68\x17\x6c\x50\xcf\xca\xd0\x12\xc8\x0f\x4a\xc6\xa1\x14\x8f\xa5\xda\xa3\xdc\x90\x22\x46\x0c\x28\x4e\xe3\xe8\x45\x16\xc4\x45\xd6\x6f\x52\x70\x6e\x0d\xcc\xba\x9b\x1a\xb2\xa0\x7f\x6e\x42\x66\xba\x0e\x8e\xd8\x92\x9e\xfd\x6c\xe9\xf8\xf2\x38\x9a\x2b\x1b\x79\x3e\x13\x55\x16\xce\x18\x27\x27\x8a\xc6\x8d\xe3\x56\x53\x22\xc3\x54\x5a\x94\x0e\x2e\x61\x90\xe0\x7d\x50\x88\xe5\x01\x66\x8f\xdc\xe2\x72\x0c\x96\x3c\xc8\xcb\x30\x78\xec\xbe\xc9\xc0\x0b\xcc\x8b\x3a\x5f\x73\xdc\x7d\x17\xec\x9f\x1a\x71\x9d\x0c\xbe\xe4\x9c\x1b\x06\xf3\xe4\x60\xd4\x2a\x08\xf5\x6a\xf0\x11\x71\x00\x95\x78\xd2\xd3\x99\x46\xc3\xc7\xa0\xd2\x1a\x0c\x4c\xfe\xc7\x36\x79\x70\x9b\x98\x2d\x42\x3c\x60\xa1\x8d\xed\x1b\x5f\x6f\x87\x6f\x7c\xc9\xcb\x5d\xee\xcd\x61\x7d\x65\x37\x99\xc8\x6c\xca\x44\xdf\xcc\xd4\x98\xbf\x78\x39\x66\x98\x15\xaf\x9b\xbc\xaa\xb9\x87\xfd\xcb\x23\x60\x07\xf1\xf1\xf0\x7e\xf5\xff\xea\x8a\xdf\xd7\x42\xa6\x7b\x41\xbe\x1b\x06\x39\x7f\xe3\xdf\x14\xfc\xfa\xd8\x37\x05\x95\x9f\x1d\xbf\x66\x76\xe0\xad\xb5\xc1\xab\x74\xc3\xb7\xd5\xcc\xf2\x91\xea\x48\x12\x08\xba\x19\x05\x03\x60\x67\x11\x4c\x67\x5d\xdb\x89\xbf\xe7\xa4\xd4\x5a\xb5\x85\xca\x03\xec\x2a\x6a\x8f\x02\xa9\x14\xe5\xa9\x9f\x74\x38\xe6\x4e\x83\x72\x99\xed\xfb\x56\xb4\x3e\x1a\x71\xd2\xaa\x97\x5d\x69\x1d\x58\x9a\xe8\xc7\x0d\x4d\x07\xaa\x92\xbb\x6c\x99\x3c\x6b\x81\xb0\x4a\x0c\xa7\xa3\x2a\x4d\xb5\x17\x4f\x51\xe7\x9e\x9c\x69\x7a\x47\xb6\xba\x2c\x2d\x70\x30\xa2\x13\x20\xba\xef\x40\xfd\xa4\x7f\x18\x6a\x1f\xfb\xca\xa2\xb7\x40\x46\x69\x3f\x80\x98\xfa\xae\x83\x64\x77\xa9\x9c\xae\xee\xe5\x48\x83\x99\x9d\x95\x1e\x5e\xc3\xe9\x88\x87\xbb\x8e\x6e\xa9\x45\x58\x4e\x9c\x7c\x97\x7e\x7c\xbc\x9c\x17\x7e\x7e\x81\x72\x8c\xae\x44\xc2\x64\xbf\x02\x3e\x6a\x34\x05\x66\x67\xbd\x7e\x8f\xea\xae\xbc\xfb\x3e\x7a\x48\x7e\x60\x06\x4c\x10\x78\xf6\x92\x3c\x18\x11\x91\x50\x15\x37\x11\x0d\x5a\x49\x11\x48\x8d\x45\xea\x3f\x9c\x24\x99\x84\x72\x53\x65\x7a\xe6\xfd\xe9\x32\x02\x35\x32\x65\x86\x9f\x43\x72\x57\xce\x94\xf5\xe7\xa5\xe9\xb3\x23\x90\x11\x4b\xe8\x8d\x4d\xa7\xe1\x67\xdc\xf1\x7d\xec\x6a\xd8\x11\xd2\x6b\xf8\xd1\xb2\x10\xb6\x08\xf1\xf4\x5a\x80\x52\x4a\xd5\x70\x9a\xad\x87\x03\xf8\xe9\x49\xb7\x39\x43\xd3\xf2\xa9\x33\x74\xb0\x5d\x2b\x15\x2f\x72\xf2\x92\xce\xa1\xe3\x49\xe5\x19\xec\x13\xff\x2c\x52\x39\x09\x04\xcc\xf6\xc7\xbe\x19\xeb\x0f\xc7\x5c\x54\x6d\x8a\xee\xe1\x3f\x75\x6e\xd1\x3c\x95\xb9\x75\xaa\x89\x0f\x9c\x63\x4d\xf9\xc8\xa9\x48\xd5\xb0\xa1\x6b\xaa\xea\x18\x11\x37\x00\x0e\x75\xe3\x9c\x1e\xb2\x3f\x74\x4d\xe6\x65\x31\x52\x7d\xb1\x0b\x35\xae\x9f\x40\x1b\x40\x3a\xf5\xa8\x08\x1c\x89\x06\xc7\x9c\xda\xab\x14\x2a\x5b\x25\xae\x9e\xe2\x21\x06\x19\xf2\x17\x65\x30\x46\x9f\x3f\x20\x57\x92\x75\xd1\x80\x0a\xc8\x97\x56\x66\x4b\x65\xaf\xb0\x0a\x0d\xdb\x55\xd2\x0a\x2b\xcf\x9b\xdd\xda\x3a\x6d\x33\x7e\xe7\xa7\x16\x2b\x07\x7a\x2a\x4b\x15\xa4\x44\xa1\xb9\xe6\xdd\xd0\x93\x88\xdc\xa3\x9d\x02\x75\xb1\x9b\x32\x8a\xb0\x41\x0e\xd0\x53\xc0\xa9\x01\xf3\xa5\x98\xfc\x75\xf1\xfa\xf5\xcd\xd4\xa3\x1d\x3a\x85\x4e\x09\x01\xb5\x8c\x64\xb1\x7d\x1e\x24\x48\x4e\x21\xe8\xcd\xc8\x2f\x7b\x9d\xcc\x52\xe0\xb5\x41\xfd\x3b\xb8\x56\x7f\xce\xb6\xff\x08\xcb\xa5\x2e\xc8\xd0\xe8\xa1\x7e\x0a\xb8\x93\x98\xf4\xa6\x4b\x18\x4e\x98\x80\x03\x92\xdf\xf7\x38\xd6\x4e\x4d\x27\x3f\xec\x62\x08\x4a\xc1\x18\xc9\x41\xae\x08\x92\x83\xc9\xcf\x3e\xe1\x91\x6d\xbf\xa4\xdc\x81\x58\x51\xd1\x83\x3f\x5d\x7d\xfe\xed\xcb\xf3\x1b\x32\x7e\xf1\x32\x1c\xdf\xfd\xaf\x45\xee\xc7\x0c\xc9\xe5\x59\x7c\x5f\x4c\xfe\xce\x86\x98\x07\x8e\xf6\x95\x51\xed\xfe\x50\x74\xbc\xac\x40\xfc\x88\x91\x08\x12\xf3\x8e\x92\xda\x9b\x24\x78\x17\xe6\x89\xd8\xce\xa3\xb2\x04\x12\x81\x93\x26\xe8\xb0\xfe\x12\x79\x82\xae\xda\x9d\xa4\x04\x7e\xa1\x92\x77\xe1\x29\x58\x09\x85\x9e\x9a\xf5\x68\xe6\x21\x78\x87\x4e\x03\x0f\x55\xc2\x8f\xf0\x14\x07\xce\xba\x9f\x59\x17\x1f\x1e\xe0\xb0\xc2\x77\x4f\xed\x72\x52\x85\xd5\x97\x65\xf0\xb3\x17\xc2\x44\xf4\x26\x61\xbc\xfa\x44\x75\xb9\x03\x27\xb5\xf0\xd8\x28\x27\xcb\x7b\xef\x78\x05\x05\x79\xe1\x1e\xf8\xff\x9a\xd2\xf8\x35\xa5\x51\x0d\x26\x33\x7e\x4d\x63\xfc\x9a\xc6\xd0\x69\x0c\xbb\x5e\xe8\xff\x58\x1e\x63\x28\x2f\xf1\x8e\xfa\x46\x4e\x62\xc2\xf2\x4c\x28\xa0\xf3\x52\xc9\xa3\xbe\x36\xf3\x20\x8f\xf3\x00\x87\x52\x68\xce\x3e\x7f\xf2\xca\x02\xb0\xdd\x49\xd3\x19\x86\x32\xbf\x15\x0d\x57\xa4\xad\xd7\x7d\xbb\x0a\x52\x80\x9f\x17\x78\x6f\x06\xe9\x91\x9d\x37\xdb\x43\x90\xf7\x43\x2c\xab\x7c\x44\x67\x61\xf0\xc0\x46\xe8\x91\xce\x29\x88\x5f\x43\xd1\xaf\x97\xed\x57\x20\x3a\xbe\x77\xae\xaa\xd8\x5e\x47\xfc\x26\xcc\x49\x11\xd8\xbb\xcf\xbc\xa6\xe2\xdf\xf5\x28\xe2\xf7\x54\xcc\x15\x10\x87\x15\xf1\x8b\x20\x7d\x97\x40\x7c\x27\xab\xe7\x2a\x48\xb8\xcc\xc3\xae\x5a\x78\xb9\x0b\x28\x2f\x54\x3e\xdf\x03\x54\x64\x5d\x91\x1d\xea\xa8\x34\xba\x59\x09\x98\xa3\xd0\x8e\xff\x9a\xdc\xbe\xc8\xb8\x53\x51\xba\x84\x5f\xb8\xa5\xe1\x77\x81\x59\xee\x9d\x28\x14\x0a\xfa\x5e\xe8\xa1\xfc\xee\xdc\xe2\xf8\xd9\x19\xbe\x1c\xb7\x12\x6f\xc9\xbe\x23\xf7\xb2\x4c\x58\x23\x06\x9a\x75\x08\xfd\xac\x2a\xf1\xb9\xc8\xf5\x14\xe9\x38\x14\x65\xcb\xeb\x6d\xb5\x56\x57\xee\x02\x2f\x25\xa3\xe4\xcb\x17\x98\xa0\x6d\x0e\xc7\x6a\x98\x7c\xd7\x31\x95\x49\xc4\x7b\xe1\x14\xc9\x10\x9f\xb8\xd5\x78\xa1\xcc\x1b\xb1\x82\xf2\x0b\x51\x5b\x97\x19\x48\x5e\x2f\x58\x77\xe8\x8e\x32\xaa\xf6\x50\x96\x9e\xd1\xd5\x4d\x9d\x42\xc4\x08\xb7\xf4\xe4\x04\x82\xb1\x35\x7e\xee\x9c\x64\x8e\x0b\xeb\xad\xec\xb9\xdb\xf2\xa0\x99\x2c\xaa\x9c\x88\x3c\x4c\xad\x9d\x65\x4a\x7c\x8d\x61\x54\x93\x22\xf3\xa3\x12\xed\x15\xce\xc2\x96\x03\x8f\x6a\xc6\x9a\x6a\x47\x5f\xc7\xd5\x15\xcb\xd4\x95\xa8\x97\x71\xda\x35\x23\xe4\x63\xaf\x7a\x06\x7e\xf8\xfa\x4f\xbe\x63\x0a\x87\xbb\x46\x80\x1b\xf1\x66\x6a\x79\x8e\x20\xd1\xa8\xc7\xe2\x28\x41\xbe\xa9\x3d\x7c\xad\x2f\x32\x09\xd9\x7d\x66\x21\x1b\x53\xac\x1f\x52\xd3\x94\xcc\x4b\x0b\xe3\xa0\x93\xb7\xb7\x16\x48\x62\xb2\xd7\xc8\xa5\x5f\xd4\xc1\xda\x8f\xe8\x9a\xd1\x8d\x0c\x6c\x89\x29\xa2\x40\x94\xec\xc6\x59\xd0\xdb\x5b\x41\x13\x40\x01\xd3\x7f\xe3\xf3\xfb\xc5\x77\x03\x60\x4c\x19\xb1\x04\x1c\x7f\xbb\xcd\xf2\xc9\x4d\x53\xec\x92\x84\xf6\xbc\x1d\xee\xe8\xfb\x55\xb1\xdd\x7b\x80\x10\x90\x41\x34\xe2\xb1\x8b\x7f\x00\xe3\x4f\x9e\xc5\x78\x51\x41\x8b\xf5\xd1\x34\xbc\x74\x94\x54\x23\x70\x9b\xcb\xb2\xc0\x62\xf9\x24\x14\xfa\x0e\x8f\x56\x85\xd9\xe0\xed\x45\x11\xa6\x56\x8e\x6a\x73\xb4\x95\xb1\xee\xdd\xfb\xfe\x61\xa7\xfe\x77\x00\x00\x00\xff\xff\x22\x46\x04\xfb\x2b\x65\x00\x00")

func builderJsBytes() ([]byte, error) {
	return bindataRead(
		_builderJs,
		"builder.js",
	)
}

func builderJs() (*asset, error) {
	bytes, err := builderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builder.js", size: 25899, mode: os.FileMode(420), modTime: time.Unix(1475172552, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dockerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x4f\x6f\x9b\x30\x14\xbf\xf3\x29\x9e\x7a\x81\x48\x51\xba\x5d\x57\xe5\xb0\xa5\x93\x96\xd3\xa6\x4e\x3b\x4d\x53\xe4\x99\x97\xc6\x2b\xd8\xec\xd9\x4e\x5b\x35\xf9\xee\xb3\xc1\x10\x08\x84\x96\xe5\x82\xc0\xbf\x7f\xfe\x3d\x07\xf6\x8c\x60\x03\x4b\x20\xfc\x6b\x05\x61\x12\x5b\x99\x22\x69\xae\x08\xe3\xd9\x4d\x14\xf9\xf5\x54\xf1\x07\x24\x07\xca\x55\x6a\x33\x5c\x6c\x36\xd5\x93\x05\x27\x64\x06\x93\x1a\xf7\x48\xac\x70\xa8\xad\x95\xdc\x08\x25\x21\xc9\xd1\xec\x54\x3a\x07\x55\xf8\x7b\x3d\x07\xfd\x2c\xf9\x0c\x5e\x22\x70\x3f\xb1\x85\xa4\x7d\xef\x7f\x84\xc6\x92\x0c\x86\x3f\x2b\xfa\xaf\xa4\xa1\x1b\xb2\xe8\xcc\x3c\xf2\x18\xb5\xf0\x12\x1f\xe1\x1b\xa9\x5c\x68\x4c\x4e\xee\x84\x5a\x65\x7b\x9c\x3b\xd4\x1f\xe4\xc6\xfb\x34\x46\x97\x1c\x4e\x6c\x24\xf2\x4c\x6d\x33\xd3\x4e\x58\x27\x77\xcb\xb3\xda\xbe\xd2\x2f\x1f\xdd\x74\x80\x21\x41\x12\x64\x4e\x8b\xc7\x7a\x17\xee\x7a\x8c\x22\x7c\x2a\x14\x19\x1d\xfa\xec\x54\x38\x58\x5d\xf0\xf5\x7d\x27\x57\xab\x92\x74\x75\xde\x72\x5b\xf7\xb7\x15\x59\x3a\x51\xf6\x93\xe7\x8c\xaa\x6a\xc3\xc8\x74\x54\x25\xcb\xb1\x2b\xe9\x8f\x45\x50\x70\xc8\x97\x63\x33\x79\xf3\x5c\xa0\xda\x82\x67\xc0\x72\xb9\x84\xb8\x56\x89\xdb\x6d\x07\xea\xa2\x82\x95\xe8\xaa\x37\xc0\x4c\x63\x1f\x18\x30\x03\x47\xa4\xdc\x54\xfc\xdd\x47\x8e\xcf\x37\xd5\x99\x01\x3e\x21\x9f\x56\x55\xfc\xd9\x51\xc6\x45\x99\x31\x8c\xef\x26\xca\x7e\x2c\x49\xe3\xc2\xda\xa8\xe2\x95\x11\x9c\x15\xa0\x0a\xa7\x78\x2a\xce\xe3\x3f\xb4\x8a\x1d\x32\x21\xcc\xd5\x1e\xd7\x39\xbb\xc7\x9e\xd7\x57\x5a\xa7\x23\xa7\xe8\xee\x44\xbd\x1a\xb6\x2d\x05\x9a\xe7\x5b\x45\xdc\x2d\xf8\x3f\x7a\x27\x4f\x3f\xce\x50\x92\xdb\x79\x25\xf0\x6a\xa0\x95\x92\x86\x09\x89\x74\x39\xd4\x6d\x2f\x54\x79\x81\xc3\x01\xb6\xcc\x1d\xbe\x5e\xbc\xeb\x6b\xf8\x61\x44\x26\x8c\x10\xa8\x9b\xb0\x3b\xa6\x87\x8b\x1b\x19\xd2\x97\xc0\x79\xcb\xa0\xda\xc5\x38\xaf\x66\x63\x13\x07\xe5\x3d\x1b\xee\x05\x5f\xaf\x70\xd1\x5b\xe8\x3b\x2b\xa5\x90\xf7\x53\x8d\xd7\x35\xf1\xbf\x5c\xa5\x2e\xdc\xab\x77\xb2\x67\x45\x7b\xab\x63\xf7\x1d\xbd\x43\xfe\xd0\x31\x64\x69\xea\x3e\x15\x5c\x59\x69\xce\xdc\xc2\x67\x72\xe5\x29\x6d\xd8\xe1\xf0\xfe\x9d\x57\x05\xf8\x17\x00\x00\xff\xff\x49\x4a\x10\x3d\x7f\x07\x00\x00")

func dockerJsBytes() ([]byte, error) {
	return bindataRead(
		_dockerJs,
		"docker.js",
	)
}

func dockerJs() (*asset, error) {
	bytes, err := dockerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docker.js", size: 1919, mode: os.FileMode(420), modTime: time.Unix(1475160023, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"builder.js": builderJs,
	"docker.js": dockerJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"builder.js": &bintree{builderJs, map[string]*bintree{}},
	"docker.js": &bintree{dockerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

