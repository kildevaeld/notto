// Code generated by go-bindata.
// sources:
// dist-fetch/bundle.js
// dist-fetch/bundle.js.map
// DO NOT EDIT!

package fetch

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bundleJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x1a\xfb\x6f\xdb\xc6\xf9\x67\xfb\xaf\x38\x67\x43\x49\xb5\x2a\xa5\x24\x7d\xc1\x8a\x56\xa4\x86\xb7\xa4\x4d\xe3\x20\x73\xb7\x1f\x54\x83\x38\x91\x27\x8b\x31\x45\xb2\xc7\xa3\x1d\x23\xd5\xfe\xf6\x7d\xf7\xe4\x1d\x5f\xb6\x15\x1b\x4b\x87\x1a\x06\x44\xdd\xf7\x7e\xde\x77\x47\x4d\x3e\x17\x7f\x13\xe4\xaf\xaa\x2c\x62\x49\x9e\xf9\x9b\x3c\xae\x52\x52\x8e\xd0\x07\x34\x99\xa0\x2b\xb2\x2c\x70\x74\xf1\x43\x9e\xb3\x92\x51\x5c\xec\x1b\x8a\x3d\x80\x9e\xae\x09\x92\xf8\x28\xc2\xd1\x9a\x58\xd0\x4b\x4c\x51\x92\x95\x0c\xa7\x29\x89\x7f\x96\x3c\xd1\x1c\x7d\xd8\xce\x0c\x52\x9b\x17\x25\xbf\x55\x09\x25\x48\x2b\x63\x61\xe8\x25\x14\x86\x4a\xa7\x50\x61\x87\xa1\xd2\xf9\x65\x0c\x4a\x77\x71\xe7\xec\x8f\xd6\x24\xba\x40\xc9\x4a\xeb\x9b\x94\xa0\x5e\x4b\xeb\xbd\x64\xe5\x37\xb5\x5e\x68\xee\x67\x23\x1b\x73\x8f\x12\x56\xd1\xac\x65\x64\x8d\x1e\x90\xf7\x45\x4e\x59\xd9\x69\xb1\xd0\x89\x12\xcc\x08\xc2\x28\x23\x57\x5a\x2f\x1f\x67\x31\x2a\x2a\x86\x12\xf8\xcf\x58\x8e\xd8\x5a\x39\xd7\x91\xce\xdd\xab\x28\xe6\x03\x2a\x70\x8f\x3b\x4a\x2b\x95\x0e\x21\x10\x63\x07\x90\xc4\x87\x48\x93\xb9\x90\x34\xc7\x31\x01\xe8\x0a\xa7\xa5\xe3\xab\xee\x50\x72\xc3\x8e\xdf\x93\xa8\x02\xcb\x58\x9d\x1f\x1d\x21\xdd\xdb\xb4\x3c\x16\x81\x19\x2a\x9a\xda\x7b\x63\xc5\x41\x7f\xd6\xeb\x1d\x99\x30\xea\x55\xe9\xef\x29\x3e\xb7\xf5\xc1\x25\x92\x86\xb5\x15\x0a\x24\x00\x7c\xc7\x68\x45\x7a\x39\xbe\x95\xf1\xe7\x3c\x95\x4a\x28\x5f\x59\x22\x6c\x74\x95\x2b\xae\x05\x33\x0b\x63\xdb\x96\xe2\x96\x07\xa7\x29\x6d\x8f\x82\xb4\xe5\x3b\x12\x31\xe4\xd7\x7e\x50\x10\xf0\x83\x45\xdc\xe1\xa6\x60\x03\xc6\x29\xe4\xbe\x7a\x6c\x09\x6c\x15\x4b\x17\xe3\xa8\x23\x1d\xfb\x24\xd4\xf4\x45\xb5\x4c\x93\x28\x2c\x30\x5b\x87\xe1\x0d\x12\x0a\x90\xf0\xe8\x51\x1f\xcf\x57\x10\x3a\x44\x32\x46\xaf\x4d\xa0\xa1\x9e\x94\xfb\x95\xdf\x2d\x0a\x05\xe8\xea\x29\x53\x2b\x97\xd0\xd6\x38\xf4\xe3\xff\x2c\x8d\xfd\x05\x3c\xa3\x29\x12\x6b\x07\x6d\xd4\x83\xcf\x7f\xdd\x47\x88\x03\x50\x30\x49\xb2\x98\xbc\x0f\xde\x95\x88\x03\x60\xf9\xd7\x3e\xd6\x13\xd4\x68\xe6\x63\x34\x58\x33\xd0\x22\xf6\xf7\xbc\x0a\x82\x0d\x2d\x3e\x89\x98\x37\xdb\xdf\xdb\xef\xf2\xbd\x0f\x4a\xaa\xbc\xf8\x7e\x45\x58\xb4\x3e\x08\x26\xe2\x13\x0c\x40\x8f\xc1\x5f\x37\x11\xbd\x20\x50\x58\xb4\x04\xb2\xb5\x7c\xe2\x84\xdf\xdc\x82\xf0\x2d\x2c\x92\x92\x01\x21\x95\x4f\x9c\xf0\xdb\x5b\x11\x96\x45\x9e\x95\x44\x50\xca\x47\x4e\xfa\x1d\x90\x2a\x5f\x89\x3e\x88\x1e\xf7\xc6\xa0\xef\xcf\x89\xcd\x7f\x26\x52\xde\x97\xa2\x75\x50\xd7\x3b\xc3\x31\x1b\x4e\x93\x9d\x62\x09\xf6\xfc\xfb\xf8\x87\x37\xcf\x8f\x7e\x42\xff\x7a\xfe\x16\xbd\x7c\xfd\xe3\xf1\xd1\xe9\xcb\x93\xd7\x60\x63\xbd\xcf\x9f\xa7\xf9\x12\xa7\x40\xe0\x36\x25\xa8\x2e\x09\x59\x3c\x12\xca\x3f\xe2\x7b\x48\x9f\x93\xbf\x3c\xe0\xa6\x2f\xf1\x92\xa4\xda\x72\x28\xfd\x73\x32\x9f\x3a\xb6\x4f\xd0\x13\x1e\xaa\x01\xb5\xb6\xb2\xf3\x1b\xd3\x6a\x35\xf9\x1c\x42\x75\xa7\x4d\xca\x19\xda\xfa\x23\xf8\x73\xa3\xf7\xe4\xce\xd1\x6b\x86\xef\x46\x1b\xee\x1c\xbf\x7b\x2d\xc6\x13\xd1\xea\x83\x98\xac\x92\x8c\xbc\xa1\x79\x41\x28\xbb\xae\xdd\xe5\x85\x21\x29\x65\xb7\xf5\xc6\xc0\x61\x0f\xa1\x4b\x9c\x56\xe4\x50\xec\x60\xfb\x7b\x5b\xee\x7e\x85\xbd\xf0\x80\x0b\xae\x52\xe6\xf1\xc8\x0a\x03\x01\xc8\xe7\x09\x55\x64\x03\xf1\x76\xca\xef\xe9\xc8\xd0\xa9\xc2\x1a\x26\xac\xab\xef\xeb\x91\x30\xca\x8c\x74\x42\x09\x98\xbb\x60\xec\x19\xc3\xee\x91\xb0\x91\xb6\x81\xf2\x91\x10\xf8\xf2\x01\x49\xa9\xe7\xe0\xcd\x6a\xb4\xd2\xa0\x49\x41\xbe\x14\x82\x74\xf6\x70\x18\x78\x6e\x93\x00\xc8\x48\xf6\x81\x2e\x4f\x2f\x21\x28\x94\x70\x0f\x2b\xc1\x86\x28\x0c\x0b\x9a\x5c\xc2\x90\x16\x86\x42\xc9\x90\xc8\xc9\x06\xe8\x7e\xe3\x34\xe0\xfb\x9a\x17\xa1\xd4\xd0\x23\x3e\x6a\x36\x56\x0c\x57\x29\x4b\x40\x67\x1a\xb8\x95\xca\x3a\x58\x42\x35\xae\xa2\x46\xdb\xca\x07\xf1\x21\x08\x5a\xb5\xdb\x0e\x72\xa3\xd1\x3d\xbd\x7b\xa9\xdc\xb6\x58\x54\x6e\xec\x58\x2e\x9f\x5e\xc1\x58\x19\x1a\x46\x29\x2e\xcb\x23\xe8\x51\xe2\x1c\x21\xcf\x08\x59\x04\xba\x1d\x41\xae\x01\x4d\xc4\x72\x1e\x6a\x11\xf5\x03\x03\x46\xfa\x01\x06\x43\x1b\x91\x63\xb2\x35\xcd\xaf\x44\x56\x9e\x5e\x17\xe4\x98\xd2\x9c\xfa\xde\x11\xce\xb2\x9c\x21\xde\x0c\xe1\x58\x20\x84\xf2\x49\x15\x1b\x9f\x78\x23\xe8\x80\x32\x59\x78\xda\xab\x0d\x75\xb0\xf2\xac\xad\xf6\x2b\x69\x96\x5b\xec\xc6\x48\xa7\xc0\xac\x12\x04\x8e\x2b\xc0\xc3\xf4\xbc\xda\xc0\x68\x55\x06\x29\xc9\xce\xd9\x1a\x3d\x9b\xc3\xb6\xf9\xfb\xef\x35\x60\xf1\x18\x5a\xca\x7c\x8e\xaa\x4c\xfa\x3d\x46\xdf\xc3\x39\x03\x1d\x3a\x18\xaa\x2a\xc5\x01\x86\xb0\x75\xce\xe7\x6c\x2e\x21\x90\xdf\x4c\x45\xaf\x6b\xd3\x38\x54\x7d\xb5\x0a\x3e\x06\x23\x23\xa6\xe1\xfa\xbb\x41\x58\xe6\xf1\xb5\x06\xf2\x67\x25\xb7\x19\x49\xbe\xa9\x8c\xb5\xe9\xba\x65\xf0\xc5\xc0\x68\xe7\xfd\xe3\xf8\xd4\x9b\x99\xf5\x5a\x31\x1e\x3c\x15\x01\xff\x83\xaa\x4d\x81\x62\x29\xe7\x6d\x70\x56\xe1\xd4\xa2\x57\x8a\x65\x55\x9a\x2a\x71\x3c\x69\x84\xd3\xed\x7c\xd1\x2a\xe9\xfe\x21\x68\x2b\x9a\x8a\x01\x1b\x70\xf9\xf3\xcc\x02\x19\x75\x25\xd4\xf2\xe6\xa0\xde\x12\x5b\xc1\x46\x36\xbe\x65\x84\x44\x72\x5c\xbc\x45\x04\x8e\x83\x7d\xca\x49\x94\xda\x3a\xa9\x8d\x6b\x8b\x51\xd8\x52\xd5\x22\xd1\x2a\x39\x34\xdd\x36\x38\xda\x5b\x2c\xb4\xc2\x2e\x0f\xcb\x2e\xd7\xa2\x9a\x90\x87\xc8\x25\x52\x41\x53\x89\x24\x90\xb7\x22\x7a\x9d\xbb\xaa\x8a\xdd\x6c\x97\x06\xfd\xd5\xc3\x35\x68\xe5\xa7\x07\x6b\xd0\x0f\xda\x8b\x45\x27\x8a\xc4\x8d\xc9\x91\xe8\x8b\x73\x64\xed\xe3\xbc\xa3\x9a\x6f\x8e\xa4\x84\x94\x3e\x83\x06\x44\x60\x66\x28\x60\x49\xdc\x6c\xad\x72\x8a\x7c\x71\x45\x05\x6c\xa6\x33\xf8\x78\x26\x81\xaa\xb7\xc1\xca\x17\x5f\x70\x44\x8e\x13\x93\x32\xa2\x49\x01\x8d\x1b\x90\x05\xd6\x22\x39\x9b\x59\xcb\x01\xc9\xa0\xbd\x51\xbc\x14\xb7\x31\xdd\xeb\xd0\x27\xc5\x05\x8a\x43\x17\xe5\xd9\x2a\x39\xaf\x34\xa5\xb8\x6e\x10\x09\xe8\x09\x0f\x78\xfc\x8a\xaa\x46\x1f\xd9\xa4\x57\x34\x61\x0e\x59\xb7\x97\xb5\xe5\x16\xe5\x05\xb9\xb6\xbf\xcb\x0d\x45\x0f\x1d\xb5\x47\xad\xfd\x4a\x38\x8e\xe5\x9c\x29\xc4\x0b\xf2\x89\x25\xd1\x1b\xed\x4a\xae\x6e\x0d\x1e\xb5\x9d\x6f\x31\x0a\x04\x22\x83\xfd\xce\x66\x39\x92\x36\x3b\x7c\x87\xb8\xb8\x2a\xcc\xb4\xea\x16\x06\x98\x04\xff\x23\xff\x0f\xb7\x8b\xbb\x19\xcd\x4b\xc1\x2c\xd4\x0d\x3b\xa9\x1b\x9a\x28\x0a\xde\xa0\x78\x1a\xf0\xe3\x91\x9e\x22\xbb\xb7\xb9\x17\x75\xa3\xb4\x7a\x5b\x58\x77\xd5\x0f\x5b\x03\x92\x9b\x52\xe2\xec\x49\x2f\x1a\x3d\x19\x89\x29\x5c\x34\xfd\x84\x19\x3e\x7a\x58\xb5\x39\xf1\x98\x03\x03\x89\x0e\x23\x82\x27\x2f\xaf\x3c\xf4\xd9\x67\x72\xf1\x60\x2e\xb7\x44\x8b\xb7\x29\xd2\x0b\x5e\x07\x8e\xdd\xda\xf6\x4b\x25\x7b\x71\x71\x36\xab\x21\x22\x7c\xcf\x29\xc5\xd7\x41\x52\x8a\x4f\xff\x72\xe4\xd0\x22\x41\xb9\xb8\xb4\xa9\xac\x09\x1c\xc0\x01\x48\x3f\xc6\x70\x2c\xb1\xe6\xfb\x06\x0b\x7d\x46\x10\x4e\xc4\x45\x41\xb2\xd8\xbf\x80\x66\x38\xb2\x99\x3a\x13\xbe\xf9\xd8\xea\x61\xa4\xee\x67\xbe\x72\xee\x18\x2d\x94\x14\x28\xd4\x43\xe4\x49\xc6\xde\x58\x07\x5c\x74\x46\xa3\x94\x12\x9b\xe1\x0d\x64\xb1\x00\x5a\x4a\x72\x0f\x65\x39\xdd\xe0\x14\x0e\x3d\xf1\x6b\xc0\x01\xa3\x95\x98\xc0\x00\xf8\xba\x60\x50\xa7\x85\x72\xa1\x6a\x29\x6b\x5c\x9e\x5c\x65\xba\xa5\xc8\x93\xba\x93\x38\xe3\x86\x14\xd7\xd7\x0e\xea\xc2\xc5\xe4\x9b\xe5\xe2\xac\xeb\x10\x34\x48\x15\x14\x55\xb9\xf6\xa5\xb9\x33\xdb\xad\x63\xe4\xf8\x2e\x26\x29\x61\xa4\xcf\x77\xa1\x04\x4b\xdb\x6b\x8d\xe5\x6a\x43\x81\x01\xaf\x9d\x0d\x69\x00\xcd\xb7\x4f\x3c\x80\x9a\xa2\x3f\x32\x60\x83\x3e\xeb\x3a\x88\x0e\x12\x2c\xa6\x67\xdd\xb9\xdb\x36\xf1\x79\x9a\x0e\x58\x09\xd0\xa6\xa1\x9d\xf2\x87\x7c\xcc\xf7\xcf\xc5\xa0\xa7\x21\x4b\xfb\x74\x00\xd0\x3d\x7a\x5a\xe9\xee\xf6\x97\x61\xd7\x0f\xe9\x5d\xf6\x67\x48\xa9\x32\xe4\x5e\x2b\xfb\xc6\x72\x14\xb2\x5c\x57\x9f\x35\x9b\x92\x23\xa2\x4f\xfd\x0e\x3d\x5a\x19\xc0\x57\x03\x96\xbf\xca\xaf\x08\x3d\xc2\xea\xd6\xc6\x12\xdc\xb8\xc4\x79\x61\x76\x18\xb3\xbb\x77\x0e\xe0\x35\xde\xdd\x07\xf0\xaf\x77\x19\xc0\x6f\x7d\x45\x22\x2f\xa7\x76\x1e\xc1\x3f\xc1\x4b\x92\x3f\x07\xf3\x3f\x07\xf3\xff\xfb\xc1\xfc\xee\xd7\x6b\xe6\x4e\x7c\x60\xa6\x37\x77\xd5\xce\x85\xc3\x83\xdd\xb9\xd5\xac\xff\xca\x03\x55\x99\xcb\x35\xf9\x6d\x56\xe3\x38\x60\x83\xdc\x10\xf3\x64\x3a\x05\x39\x16\xc6\xac\x53\xc8\x29\x79\xcf\x5c\x41\x7c\xa5\x25\xcc\x42\x73\x08\x1b\x42\xbd\x93\x9f\x3c\x57\x6a\x83\x9b\x80\x0c\x5c\x1e\x76\xdd\x2e\xd6\xf8\x5d\x9e\xb4\x31\x6e\x38\x60\xe9\x80\x36\x4e\x58\x3c\xbc\xbf\x94\xd6\x4f\x0a\xac\xc3\x57\xfb\x3a\xf0\xf6\x77\x5d\x0a\x33\xbf\x00\x24\x15\xa4\xbf\xcd\x45\x5c\xe0\x58\xa5\x16\x9e\xa1\xa7\xd3\xa9\x8d\x6d\x62\xeb\x04\xcd\x02\xa9\x48\xb4\xbc\x2b\x50\x78\x8f\x50\x87\x4d\xad\x61\xc0\x27\x59\x0f\x5a\x26\x83\x74\xfb\x92\x23\x78\xce\x55\x9c\x73\xca\xd1\x1e\x6a\x4e\x14\x0c\xe4\xf4\x0d\x12\x1c\xe6\x37\xa6\x9f\xce\x53\xef\xed\x5e\xf6\x74\xbf\x92\x91\x2f\x5b\xc2\x3a\x28\xd6\xc9\x6d\x70\x80\x7b\x57\x42\xdf\xe8\xd1\x9c\xc3\xfc\x9e\xb9\x57\x5a\x15\xb0\x35\xc9\x2c\x1d\xe3\x2e\xed\x7e\xfc\xe7\xc9\xeb\xa0\xc0\x14\xac\x89\x7b\xd5\x6a\xce\x4a\xda\xd3\x37\x0e\x4b\x16\xe2\xdd\xa7\xa5\x6f\xee\x63\x5a\x72\x5f\x9e\xb7\x7e\x25\xf0\x3f\x99\x96\xee\xe9\x25\xba\x32\x66\xf7\xd7\xe8\xb6\x0f\xd4\x16\xf3\x70\x2f\xd2\xbf\xbd\xff\x68\xb6\x7e\xba\xf1\x47\x8e\xa6\x32\x66\xf7\x68\xda\x3e\x50\xaf\xd0\x1f\x2e\x9a\xdf\xed\x14\xcd\x1b\xe3\xd9\xfa\x45\xcd\xee\x11\xfd\x34\x62\x2a\xad\xf8\x98\xa0\x5a\x7e\x50\x3f\x6f\x78\x90\xa8\xd6\xbf\x1c\xe3\xcd\x7e\x32\xf9\x0b\x2a\xf3\x8a\x46\xe4\x67\x5c\x14\x49\x76\xfe\xcb\xdb\x57\xf3\x25\x8c\x2f\x29\xd7\x24\xd8\xe0\xe2\xbf\x01\x00\x00\xff\xff\xdc\x5a\xa9\xc1\xdf\x2b\x00\x00")

func bundleJsBytes() ([]byte, error) {
	return bindataRead(
		_bundleJs,
		"bundle.js",
	)
}

func bundleJs() (*asset, error) {
	bytes, err := bundleJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bundle.js", size: 11231, mode: os.FileMode(420), modTime: time.Unix(1471739881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bundleJsMap = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\x7b\x57\xdb\xc6\x12\xff\x2a\xc2\x7f\x14\x3b\x57\xb5\xdc\x18\x42\x83\x2e\xcd\x91\x85\x79\x86\x3a\x90\x50\xca\xc5\x1c\x1f\x59\x92\xb1\xb0\x2c\xb9\x92\xcc\x23\x94\xfb\xd9\xef\xcc\xbe\x57\x96\x1d\xd2\x72\xff\xa8\xdb\x63\xaf\x76\xe7\xf9\x9b\xd9\xd9\xd1\x86\xa7\xda\x5d\x98\xe5\x51\x9a\xd4\xb6\xdb\x66\x2d\x4f\xe7\x99\x1f\xe6\xb5\xed\xab\xda\x7d\x38\x9c\x79\xfe\x64\xdb\xb2\x2c\x36\xb4\x86\x69\x5a\xe4\x45\xe6\xcd\x8c\xd6\x66\xfb\xed\x56\xbb\xdd\x0e\xde\xbd\xdf\xd8\x0c\xda\xad\xcd\x9f\x37\xde\xd5\x4c\x95\xa7\x69\x45\x49\x10\x3e\x34\x6f\xf3\xf2\xfc\x28\x2c\xfc\x31\xcc\x7f\x78\xe7\x0f\xdb\xcb\x16\xcb\xf3\x59\xf8\xc7\x3c\xcc\x8b\x8a\x95\x71\xe8\x05\xe0\x41\x25\x4f\x3e\x4b\x93\x3c\x5c\xc9\xf4\xe1\xfd\xd6\x68\x63\xb9\xb6\x0f\x6f\xdf\x8f\x86\x2b\x04\x83\x13\xe1\xdb\xda\xb5\x59\x4b\xbc\x29\xc1\x0d\x86\x53\x6f\x36\x8b\x92\x1b\x78\xaa\xd9\x0e\x7c\xe0\xcb\x75\x6c\xf8\xee\x2e\x0e\xab\x9e\xcd\x79\xc7\x71\x42\x1c\x8e\xaa\x89\x56\x89\x82\x9f\xfd\x97\x72\x28\x1f\xc7\x2d\x40\x71\x0a\x8a\x7b\xa6\x0b\x8b\xe6\x3b\x18\xe6\x1d\x3a\xc6\x2f\xe4\x18\xbb\x2a\x45\x04\xdf\xad\x12\xc5\xec\x3b\x29\xa6\xf0\xbd\xc1\x29\x14\x63\x0e\x32\xd7\xcc\x8f\x6c\xfd\x93\x77\xdc\xfd\xfb\x8e\x79\xec\x38\xc7\x20\xe9\x60\x8b\x0c\x4f\xcc\x1e\x4a\xdb\x07\xb7\xcd\xa9\x14\x3c\x81\xe1\x85\xae\x19\x44\x12\xfa\x53\xc7\x39\x5d\xa0\xc7\xe1\xa5\x42\x8f\x28\x3d\x74\xcc\x73\xc7\xf9\x4c\x14\xd2\x25\x32\xea\xc2\x92\x79\xe8\x38\x87\x64\x84\x92\xbf\xba\x68\xc4\x09\x15\x4a\xbe\xc8\x72\x4f\x48\x2f\xf1\x95\xcd\xaa\x62\x26\x56\x12\x16\x61\x4f\x9b\xd8\xd3\x2b\x0b\x3f\xc7\x2f\xf2\x48\xc8\x4f\x50\x58\x97\x62\x04\x41\x35\x2f\x71\xe5\x1e\xdc\xbb\x67\x38\x13\x1d\x84\x54\x8e\x3c\x36\x3a\x44\x26\xcb\x35\x2f\x50\x85\x58\xc6\xc9\x4f\xe6\x0d\x41\x8b\x88\x97\x72\xa4\x2b\xa7\x10\xdb\x0e\xb1\x73\xd7\xf4\x91\x52\x5a\x58\xa2\x3c\x01\xa7\xd5\xac\x38\x74\xdc\x23\xe5\xb1\x0b\x8f\xf6\xe2\x07\xd2\xaf\xb3\xfb\x1d\x11\xb7\x8f\x9d\xee\xb8\xc3\x69\xdd\x91\xf9\xd9\xd9\x3d\xe5\x46\xb9\x81\x88\xc9\xbd\x6b\xa7\xf0\x73\x44\x3d\xb5\x81\x20\x71\xa9\x97\x10\x82\x5f\xc9\x08\x27\xbb\x94\x15\xe6\x3e\x91\x11\x9d\x23\x51\x82\xaf\x33\x32\xa2\x73\x3c\x7c\x47\x64\x64\xdb\x8f\x1d\x67\x77\x4c\x23\xc4\xd3\xaa\x27\xb2\xe0\x44\x84\x5e\x64\x19\xd9\x25\x2a\x8d\x74\xb7\x14\x79\x91\x1e\x82\xcf\x52\xf9\x64\xa2\x93\x11\xa7\xf9\xaa\xd2\x1c\x8a\x40\x8b\xcc\x24\x46\xde\x32\x22\x62\xd5\x25\xee\x0d\x91\x61\x28\x63\xb3\x03\x70\x72\x19\x32\x73\xe5\x4e\x11\x21\x27\x29\xae\x52\x57\x78\x2c\x93\x0a\xa9\xdb\x2a\xf5\x52\xdf\x25\xb3\x9c\xe3\x12\x7e\x72\x15\x09\x12\x05\xc9\x22\xf1\x38\x24\x55\x8d\x04\x19\x1e\x3f\xae\xf6\x0a\xa9\x63\x9e\xe3\x04\x1e\xbe\xd9\x08\x28\xbf\x55\x7a\x29\x7d\x03\xee\x42\xe3\xd6\x20\xfd\xfd\x25\x5e\x97\x7c\x3d\xc4\xf2\xa1\x4a\x14\x55\x03\x25\xfe\xa7\x12\x05\xcd\xf7\x9f\x34\x7b\xb4\xa2\x76\xa6\x70\x57\x65\x09\xc5\x02\x36\xeb\x1e\x56\x66\xc7\xea\x4c\x3a\x2c\xc7\x17\x3f\xc7\xee\x1e\xdb\x35\x20\x63\x04\xf9\x74\x20\x76\xe2\x7e\xa0\xa8\xb5\xed\xb7\x1d\xe7\x80\xef\x95\x73\xb4\x4f\xb1\x9c\x92\xc0\x88\x41\x45\xf8\x16\x73\x13\xf2\xe7\x62\xd1\x5e\xc5\xef\x13\x25\x0e\x9f\x05\xbe\x87\x22\xdd\x09\xe5\xa1\xd0\x40\xe6\x34\x68\xb6\x48\x55\x3d\x56\x84\x1f\x2e\xc0\x17\x77\xb0\xa8\xaa\xb9\xa4\x97\xfe\xd2\xc9\xaa\x52\x2f\x4b\x6d\xb9\xe9\xd9\xa6\xba\x5c\x2c\xae\x8a\x58\x80\xef\x0b\xf3\xf2\x5c\xac\x48\x89\x17\x48\x83\x45\x93\x64\xf1\xb1\x52\xd8\xab\x6a\x0b\x48\x70\xf4\x62\x9f\x10\x20\xf7\x30\x0f\x20\x03\xe0\x70\x88\x65\x06\x5c\x3a\x69\x07\x4a\x18\x9e\x18\xae\x84\x45\x1e\x83\x0c\xa0\x0b\x54\x09\x67\x85\x4f\x9d\x90\xb6\x01\x16\x9e\x02\xac\x7e\x2c\x27\xbb\x34\xbe\x7a\xe5\xa0\x72\x4a\x3c\xa5\xe8\x13\x23\x24\x1d\xb7\xe4\xfd\xae\x02\xbe\x48\x13\x85\x50\x9e\x93\xe2\xa4\xe3\xbb\xee\x62\x25\x63\xc9\x08\x19\x58\x9e\x87\x6d\x6c\x7a\x2e\x9d\xee\xb1\x19\xe9\x58\xd1\x8a\xe0\x8b\xc4\x2c\xa9\xf8\x36\x54\x42\x45\xb2\x4b\x55\x90\x43\xde\x2d\xef\xf1\xbf\x17\x82\x2a\xd3\x16\xf1\xbd\x75\x59\xef\xb0\x9a\xbc\x2a\x87\x4f\xb1\xb9\xa2\x79\xc6\x70\xba\x79\x6d\x9c\x64\x7a\x72\xc4\xbe\xfe\x7f\x10\x23\x46\x56\xed\xed\x17\xc2\x42\xfa\xa6\x25\xa6\xe9\x5b\x6b\xf4\x1a\x3b\x6b\xe9\x46\x58\x92\xca\x5f\x59\x2a\x4f\x3b\xe4\xfd\xa5\x84\x1b\x34\x1d\xa5\x20\x5d\x60\xbb\xa6\xe1\xde\x86\xa2\x0c\x85\x66\x73\x57\x9e\x24\x70\xb0\xf0\x7e\xab\xb2\x25\x74\x36\xbf\xe7\x25\x80\xb5\x84\xa4\x55\x03\xfb\xc7\x58\x41\x3f\x9e\x72\x4f\x8f\x47\xc2\xe4\x9b\x5d\x3b\x57\x7a\xc2\x0d\x90\xd3\x66\x5d\xc2\x67\xde\x14\x9a\xff\xea\x70\x48\xec\x1b\x17\xfd\x80\x1a\x79\x8e\xeb\xbf\x91\x11\x79\xb7\xa1\x28\xd8\xf8\x32\x45\x1b\x48\x5c\xa7\x0e\x99\x37\x72\x93\xe0\xb1\xf7\xf1\x8e\x62\x4e\xce\xbd\xb6\x7a\xee\x11\x11\xe7\x4e\x77\x44\x51\x97\x73\x78\x16\xfe\xf6\x17\xda\x06\x87\xbc\x86\x49\x3e\xf9\x32\x40\x1c\x2b\x9d\xf6\x27\xfa\xdb\x09\x97\xf0\xe0\x7e\xa3\xdd\x71\x4a\x8d\x1f\x01\x85\xd0\x90\x11\xa7\xd9\xea\xac\x6e\x34\x2a\xdf\x23\xf4\xed\x81\x67\xd0\x7b\x97\x1c\x42\xbf\x4f\x58\x7c\x21\x15\xbd\x3b\x7a\x04\xed\x93\xb7\x62\x68\xee\xfc\x8a\xb7\x27\xac\xbb\x3d\xe4\xd4\x66\xc9\x89\x28\xfb\xbe\x53\xfd\xf4\x83\x5c\x9d\xb1\x8d\xb8\xcf\x34\x94\xe4\x57\x54\x16\x3d\xf5\x5d\xa6\x72\xd9\xe1\xb0\x4c\xef\x96\x4b\xf6\x48\xd2\x11\x7e\x92\x3d\x72\xc6\x1f\xc4\xce\xd8\x03\x5c\x5b\x47\xda\x5e\x71\x16\x27\x36\x8e\x6a\x66\x6d\x14\xc5\x61\x6d\xbb\x36\x9c\x27\x41\xcc\x2e\x4b\xd8\x3d\x90\x9b\x26\x45\x98\x14\x78\x1d\x64\xf4\x0b\xcb\x32\xbe\x8c\x43\x63\x9a\x06\xf3\x38\x34\x7c\xcf\x1f\x87\xfd\x04\xe6\xef\xbc\xcc\x88\x92\xbc\xf0\xe2\x38\x0c\x4e\xc8\x6a\x6e\xec\x18\x4f\xcf\x76\x3f\x21\x04\x8c\x11\x6f\x55\xa2\x2c\x34\x46\xf3\xc4\x2f\xa2\x94\xae\xf1\x07\x63\x30\x60\x77\x2c\x03\x46\x37\x18\xd4\xa9\xaa\xc3\xa0\x61\x3c\x31\x51\x44\x98\x3b\x0e\xfd\x89\x11\x8d\xb8\x29\x51\x0e\xfa\x15\x83\xfa\x45\x34\xaa\x97\x2d\xba\xe2\xc2\xae\x1b\x8c\xa8\x5f\x64\x61\x31\xcf\x92\x05\xe3\x25\x69\x33\x7c\x98\xa5\x59\x91\xdb\x9a\xfa\x2c\xf4\x8a\xd0\xf0\x8c\x24\xbc\xe7\x26\xd4\xbd\x24\x30\x66\xf3\xc2\x88\xe0\xff\xa4\x48\x8d\x62\xcc\x20\xe2\xda\x10\x25\x46\xbc\xb3\x42\x23\x02\x27\xec\x63\xda\xb7\x01\x4b\x53\x4c\x46\xc1\xb6\xc1\xc9\xe5\x6c\x9c\x7a\x41\x08\x2b\x23\x2f\xce\x39\x0a\xcf\x9a\xd9\xdd\x87\xd0\x9f\x83\xdd\x85\x8c\xa1\x16\x89\x7e\x31\x5d\x70\xdf\x07\x23\x59\x14\x38\x14\x26\x63\xe6\xbf\x72\xbe\x22\x82\x0d\xcd\x82\xbd\xd8\xbb\x51\xd5\x7b\xb9\x41\xcd\xd6\xf4\x37\xe9\x1c\x00\x51\x64\xf3\x50\x13\x70\x46\xe3\x85\x22\x98\x56\x23\x1d\x29\x12\x19\x25\x0b\xab\x6e\x9f\x4d\x16\x9f\x51\x1c\x4f\x4a\x5c\xc9\x55\x40\x40\xdc\xf0\x36\xf4\x0b\xa3\x2e\x7d\x61\x2b\xe0\x0b\x61\xab\x70\xb2\x39\x05\x5b\x19\x99\xbd\x42\xba\x92\xa1\x55\x52\xfc\x8a\xbc\x50\xc4\x49\x96\xd9\x7c\x18\x47\xfe\x60\xe6\x15\xe3\xc1\x60\xa9\xb8\x19\x88\xeb\xd7\xfa\x35\x45\xc4\x47\x00\xd6\x80\xfd\x9c\x3d\x8a\x08\x40\xd6\x32\xb4\x18\x4c\x84\x96\x4d\x55\x6d\xc9\x16\x0d\x29\xfe\x67\xbd\x79\x63\x5c\x74\x3b\x9f\x1c\xf7\xd8\xd8\xeb\xf5\xbe\x74\xcf\x8c\x37\x6f\x80\x1f\xa6\x5f\x76\x63\x4c\x68\x2d\x28\x37\x4c\x7c\x7d\x9d\x62\xf6\x81\xdc\x02\xaf\xb1\xdb\xe0\x75\xd4\x58\xa6\x38\xa0\x17\xb8\x6b\xe2\x2a\xb7\x92\xea\x8c\xde\xe3\xae\x89\x1b\xdd\x25\x54\xf4\x3a\x77\x4d\xde\xec\xae\xbf\xc8\x4b\x79\xc7\x2d\x3c\xd1\x73\x0e\x42\x70\x13\xa7\x43\x2f\xbe\xea\xd7\x88\x2f\xfd\x1a\x6e\x70\x6e\x40\xbf\xf6\xe3\x9a\x75\x9e\x83\xf5\x96\x9f\x26\x99\x17\x58\x17\x69\x36\xb1\x6e\x52\x2b\xcf\x7c\x6b\x34\x49\xf2\x2c\x6f\x0e\xa3\xaf\xd6\xcc\x4a\x8b\x22\x0d\x1f\x0a\x8a\x88\x75\x9b\x5b\x49\x1a\x84\x3c\x37\xad\xa1\x37\x0c\xe3\x1f\xc9\xbe\xc9\x84\x4d\x1f\x20\x95\x6e\xc2\x9d\xd6\x5f\x56\xc1\xef\xe2\xfb\x35\x8e\x06\x60\x51\xfa\x50\x20\x74\x7c\x38\x38\xff\xb5\x28\xc0\xcc\x30\x3d\xaa\x1c\x34\x51\xc3\x71\xc3\xff\xa4\x4d\xf9\xe3\x79\x32\x41\x0c\x5b\x02\x5e\xf0\x21\x2f\x0c\x16\x56\x05\xc9\x75\x3d\xc2\x9c\x8c\x06\xb3\x4c\xa7\x85\x98\x46\xca\x08\xc2\x91\x37\x8f\x0b\x51\x11\x0d\x62\x24\x1c\x22\x50\xd3\x4d\xd8\x96\x51\x41\xce\x20\xc3\xa0\xa2\x41\x1e\x48\xc5\xfa\xcf\x6c\xd1\x28\x6d\x95\x30\x17\x84\x54\x6f\x9d\xd5\x44\xbe\xef\x70\xed\x53\x96\x4e\x23\x58\xaa\x03\x79\x1a\xdf\x41\x6d\xcd\x42\xac\x43\x0d\x63\xe7\x17\xaa\x56\x90\x0f\x06\xb3\x2c\xba\x83\xf3\x67\x30\x20\x26\x0e\x42\x5a\xd6\x81\xf5\x0f\x64\x83\x3a\x1c\x66\x99\xc2\x67\xe0\x41\x59\x87\xb9\x86\x9c\x11\xd2\xa8\x1a\xb2\x6a\xf3\xc5\x67\x6a\x9e\x46\x45\xac\x42\xeb\x38\xd9\x33\x1d\x90\x9f\xe7\x17\x6d\x15\x2d\xea\x32\x96\x6c\x23\xeb\x31\x52\xf7\xf4\x42\x88\xfc\xd8\xcb\x73\x91\x03\x32\x28\xd9\xdc\x2f\xd2\x8c\x07\xe2\x69\x1a\x16\xe3\x34\x30\x0d\x26\x0b\xb1\x09\x40\xbc\x0f\x6b\xc3\x34\x78\x7c\xde\x79\x7a\x16\x88\x14\xe3\x28\x6f\x52\x06\x30\x64\x7d\xbf\xfb\x65\xdd\x56\x56\xc6\xc2\x46\x0c\x16\xb3\xb8\xfe\xf4\xdc\x50\x89\xb8\x78\x14\x30\xf5\x92\xb9\x17\x6b\x32\x50\x27\x0a\x98\xc7\xb1\xcd\x01\xc6\xc0\x10\x73\x69\xdd\x4f\xfc\x10\x4e\x33\xe6\x98\x12\x2d\xc2\x3f\xcf\x62\x72\x3e\x00\x35\x8e\x6d\x6d\x51\x98\x4e\xd7\xe9\xa3\x4e\x52\xed\x03\xa5\x67\x6b\x0d\x9d\x43\x71\x88\x92\xf1\x09\x9e\x02\x46\x08\xad\xc6\x72\x33\x39\x99\xea\x2d\xb5\xac\xec\x9b\x30\x5f\x33\x5c\x63\xe4\x26\x96\x38\xab\xbd\x2a\xf9\xa3\x09\xe2\x4e\x94\x25\x29\xde\x96\xfd\x54\xd9\x31\x8c\x65\x56\x16\x5a\xfc\x91\x2c\xe4\xeb\xf9\x05\xfb\x42\xfe\x5b\xa3\xd8\x19\x95\x09\xcf\x37\x0a\xd1\x3d\x90\x8e\xf3\x36\xbb\xb4\x09\x22\xe9\x21\x4d\xb3\x48\xcb\xb2\x83\x05\x3c\x09\xc5\x0e\xf9\x69\x72\xf1\x55\x08\x14\x8f\x33\x14\x40\xc9\x77\x20\xd9\x69\xcb\xb4\x6e\xfc\xf0\x03\x9d\x5c\xdb\xa1\x69\xae\xc8\x1e\xa5\x99\x51\xc7\x06\x78\x82\x8d\xba\x66\x1c\x7e\x70\xe5\x8e\xe9\xbe\x9a\x5c\xdb\x72\x05\x15\xae\x39\x59\xe6\x3d\x36\xa3\x9c\xfc\xd6\xef\x1a\x1a\xaf\x41\x38\xaf\xee\x54\x2e\xa5\x82\xc1\x72\x13\xb4\x77\xa1\xf3\xaa\x87\x58\x15\x49\xc4\xbc\xd9\x2c\x4c\x82\xfa\x04\x6a\x65\x43\x2b\x7c\x6a\xf0\xf0\x87\x11\xe2\x3f\xee\x9a\x60\x66\x3c\x0f\x85\x72\x5a\xbe\x92\x34\x9b\x7a\x31\xd4\xee\xe0\x57\xa0\x01\x4b\x18\xb0\x4d\xb1\x80\xf3\x44\x40\x43\xdb\xf7\x6b\x3d\x02\x5b\x73\xec\xe5\xbd\xfb\x04\x0e\x80\x59\x98\x15\x8f\xb4\xe1\x26\x36\x0e\x44\xe1\xd2\x75\x34\xca\xe9\xc7\x09\xaf\x74\x3a\x6c\x34\xae\xae\xcb\x11\x5c\xc9\xd1\x9c\xcd\xf3\x71\x9d\xba\x69\x2b\x28\x04\x61\x1c\x16\xcc\x09\xae\x9c\xce\x95\xe4\xad\x70\xfe\x5a\x15\x78\x13\x16\xba\xb4\xbf\x09\xe6\x4a\xaf\x14\xbc\x32\xfe\xfe\xb0\x82\xfc\xaa\x75\x6d\x2f\x26\x02\x58\xec\x40\x64\x34\xa3\x2b\xa5\xad\x82\xc0\xf8\xf3\x4f\x1e\x12\x26\x16\xa2\xff\x6a\x40\x30\x73\xf4\xdd\xb2\x1a\x19\xd5\x94\x9c\xc5\xe4\x15\xf3\xfc\x9b\xe9\x49\x34\x69\x80\x40\x81\x2a\x22\xdf\xa8\x90\x5a\x42\x1d\xe7\x9a\x45\xfa\x31\xbd\x0f\x33\xd7\x63\x6d\x95\x5a\x74\xbf\x51\x76\xe5\x5f\x80\xbc\x5a\x43\xc2\xba\x4d\x62\x27\x1e\x06\xd0\x76\xeb\x6f\xb1\xc6\x60\xb1\x0b\x50\xab\x36\xae\x42\xe7\x82\x18\xcc\xf3\x9d\xb7\xad\x96\x69\xd0\xf1\x17\xe8\xcb\x77\xd6\x7b\xc7\xeb\xa2\x9d\x81\xee\x65\xb1\x83\x79\xd1\x69\x48\x28\xd3\x09\x10\x51\xd9\xc6\x2f\x3b\x06\xa8\xc2\xf2\xcd\x26\xfe\x6d\xb4\x5b\x2d\x95\x9a\xcd\x73\x8e\xc5\x25\xb4\x4f\x2c\xe3\x83\x4a\x82\x07\x06\xc2\xa0\x58\xd8\xc4\x02\xb0\xee\xd3\xdb\xa5\x1f\x91\x60\x5d\xcb\xc5\x02\x44\xd4\x17\x22\xae\x34\xca\xac\x23\xc5\x82\xce\x9b\x53\x9a\x6c\xe4\x7c\xd6\x64\xdd\xe6\x69\xb2\x20\x8b\x1a\x46\xb4\x34\xe1\x05\x3d\xa9\x07\x28\xea\xe8\x73\xef\xd7\xe6\xcc\xcb\x40\x41\xd0\xf8\xce\x7c\x52\xfe\x26\xe8\x05\x2f\x83\x2c\x36\xff\xa8\xd7\x41\x65\xc7\xbc\xd2\x0b\xe1\xc2\x4b\x7c\xe5\x4b\xe1\xbb\x6f\xbd\x14\x2e\x87\x99\xf5\xd2\xff\x28\x98\x95\x7e\xf0\x95\x60\x5e\xb8\x05\xa9\x84\x79\xeb\xef\xc0\x4c\x73\xff\x1f\x86\xb3\xdc\xb0\xaf\x06\xf4\xc2\x45\x52\x25\xd4\x3f\xaf\x86\xfa\x9a\xdf\xbf\x9f\xa5\x69\x51\xdb\xae\xd5\x9e\xff\x17\x00\x00\xff\xff\x38\x09\x2e\x6d\xa5\x29\x00\x00")

func bundleJsMapBytes() ([]byte, error) {
	return bindataRead(
		_bundleJsMap,
		"bundle.js.map",
	)
}

func bundleJsMap() (*asset, error) {
	bytes, err := bundleJsMapBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bundle.js.map", size: 10661, mode: os.FileMode(420), modTime: time.Unix(1471739881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bundle.js": bundleJs,
	"bundle.js.map": bundleJsMap,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"bundle.js": &bintree{bundleJs, map[string]*bintree{}},
	"bundle.js.map": &bintree{bundleJsMap, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

