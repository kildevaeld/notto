// Code generated by go-bindata.
// sources:
// dist-promise/bundle.js
// dist-promise/promise.js
// DO NOT EDIT!

package promise

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bundleJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x4b\x6f\xdb\x46\x10\xbe\xf3\x57\x8c\x2f\x11\x69\x0b\xf2\xf3\x64\xc1\x40\x8b\xa2\x87\xde\x7a\xc8\x2d\x08\x04\x6a\xb5\xb4\x58\xd3\x4b\x62\x49\xca\x35\x1a\xfd\xf7\xce\xec\x73\x96\x96\x1c\x1b\x49\x0a\x14\x88\x81\xd6\xde\xd9\x79\x7e\xf3\x5a\x66\x36\xf6\x12\xfa\x41\xd7\x62\x98\x2d\xb3\xec\xfc\xf4\x34\x83\x53\xf8\x45\xb4\x0a\x89\xa3\x18\x5a\x8d\xe7\xf3\xac\x1a\x95\x18\xea\x56\xc1\x9f\xba\x7d\xac\x7b\x99\x6b\xd9\xb7\xcd\x4e\xea\x02\xfe\xc9\x00\xea\x0a\xf2\xe1\xb9\x93\x6d\x05\xfe\x02\x4e\xee\xee\x60\xe6\xe5\x66\xf0\xe1\x03\x1c\xe4\x18\xd5\x46\x56\xb5\x92\x9b\x99\x55\x05\x30\x6c\x75\xfb\x04\x4a\x3e\xc1\x47\x14\xf8\x5d\xeb\x56\xe7\xc5\x12\xaf\xf6\x59\x6a\x6a\xd8\xd6\xbd\x55\xd2\xae\xff\x92\x18\x00\x7c\xf9\x82\x97\x44\x25\x6b\xf8\x7b\x31\x6c\xa5\x2a\xde\xa6\x78\x57\x6a\xe8\x65\x53\xc1\x9d\x11\x5d\x12\xed\xfc\x1c\xb1\x29\x07\xd9\xdb\xbf\x2f\x6e\xa1\x93\x6a\x53\xab\x7b\x7b\xbe\xbc\x75\xc1\x04\xca\x15\x51\xc8\x97\x40\xb9\xf6\x3c\x72\x63\x09\x37\x9e\xc5\x10\x8c\x55\x32\x81\x66\x2f\x96\x8e\xb0\x2b\x1b\x7e\x54\xf2\xef\x01\xcf\x9f\x3e\x7b\x42\xa5\xf0\xa8\xc6\xa6\xf1\x04\x04\xd3\x13\x32\xb0\x91\x77\x36\x51\x3c\x1a\x43\x77\xce\x20\x3d\xe4\xd4\x91\xf2\x9d\x07\xca\xe8\x27\x2c\x16\x95\x5a\x1a\x8a\x31\x60\x28\x52\x1b\x5d\x36\x11\x27\xc6\x75\x2f\x06\xce\xf1\xdd\xd2\x1d\x7d\x60\x97\x4e\x04\x29\x72\xf8\xe3\xf1\x51\x6e\x6a\xbc\xc8\xab\x5a\xcb\xc2\xf2\xee\x2d\x83\x96\xc3\xa8\x95\x31\x64\xf2\xc2\xdd\x26\xc8\x52\xaf\x89\xf2\xe3\x9c\xbe\xfa\x76\xa7\x57\x5d\x08\x3e\x54\x23\x0f\x81\xce\xf9\xaa\x52\x73\x58\xf9\x4e\x72\x2e\xe6\x41\x1e\xcb\xfb\xb2\x88\xce\x1e\xad\xe1\xe0\x0e\xd5\x03\xd9\x25\x1e\xdf\xad\x85\x8b\xa5\x5b\x18\x94\x56\x1e\xa1\x6e\x61\x30\x5a\x05\x7c\xfa\xa7\x7a\x10\x5b\xc8\x13\x88\x44\x89\x75\x74\x7d\xeb\x3c\xe8\x16\xa1\x5e\xca\xa6\xf0\xa8\xad\xb5\x2c\x1f\x96\x91\xfd\x86\xb3\xdb\x44\x1d\xe6\xc6\xee\x2f\xc7\x66\xf0\xec\x54\xeb\x8b\x6e\xec\xb7\x79\x77\x88\x3b\x85\xbc\x9b\xe0\x2d\x4a\x72\x9e\x01\xbc\x32\x94\x9c\xa1\xcb\x92\x65\xd2\x91\x53\xd7\x58\xfc\xa3\x32\xd3\x63\xb5\xaa\xfb\x44\x99\xa5\x98\xe1\xe3\xb5\xf9\x5a\x21\x1a\x0d\x9f\x1b\x07\xa3\x89\xe2\xb1\xec\x72\x2f\x8c\xd1\x84\x14\x3a\x21\x4c\xec\x35\xcd\xa9\x14\x4f\xd2\x72\x00\xb2\x3d\xf3\x6e\xd0\xcf\xac\x54\xa6\x43\xf5\x2e\x19\xbb\xd1\xaa\x67\xc8\xf9\x14\x98\xf3\xe6\x0a\x65\x84\xff\x81\x85\x32\x97\x71\x76\x06\xbe\x5c\xc6\xa1\xe9\xe0\xe4\x03\x53\xcb\x8a\x26\x5c\x25\xb5\x54\x42\xc2\xd0\xc2\x8c\x80\x9e\x05\x20\x2d\x9b\x58\xcf\x41\x8a\x39\x08\x75\x0b\xfd\x28\x84\xec\xfb\xdf\xca\xa6\x59\x97\xe2\x61\x0e\x55\x59\x37\xa3\x96\x91\xa0\xda\xe1\x23\x2a\x51\xe5\xba\x09\x54\xd4\x93\x74\x92\xb9\x04\xdc\x4c\xd5\x9c\x69\xe7\x6d\xe5\xc1\x32\x1d\x3f\xd9\x1b\xd3\x2b\x06\x21\x5f\x5d\xd5\x51\x80\x63\x5a\xe8\x87\x22\x54\x03\xe0\x14\x1e\xd0\x42\x0f\xe5\x7d\x59\xe3\x4a\x85\x72\x4d\x0b\x57\x60\x08\x3d\x54\xd8\x9d\xd0\x77\x52\x80\xd8\x4a\xf1\x20\x75\x90\xa6\x02\x24\x71\xb7\x04\x7c\x06\xab\x05\x09\x52\x59\xcc\x43\xe8\x71\x00\xda\x1f\x8a\x13\x45\xcf\xce\x52\xb2\x4f\xd5\x92\xd1\xf6\x19\x3b\x84\x29\xc8\x68\x62\x9d\x17\x51\x60\xff\xdf\x18\x95\x22\x31\x5a\xb8\x3f\x5f\x96\x64\x54\x20\x99\x02\x2e\xbe\xb7\x05\x0d\xb2\x41\xcc\xbd\x90\x50\x39\xaf\xf4\x8c\x97\x11\x0d\xf7\xdc\xeb\xa7\x14\x52\x5e\x28\xba\x7a\x98\x61\x0e\x4d\x99\x51\x95\x85\x41\x8b\x39\x71\xb6\x79\xfa\x4d\x99\x18\xdf\xb0\x74\xf0\x97\x99\x34\xce\xe6\x81\x30\x42\x10\xf6\xf8\x72\x01\xb9\x2e\xb3\xde\x25\x83\x30\xd4\xbd\x2d\xfb\x90\x9f\x17\xd3\x86\xed\xe0\x44\xcd\xab\x32\x57\xef\x90\x49\xcb\x9f\x0a\x22\xce\xb9\x4b\xd6\x42\xb4\x80\x8e\x74\x50\xc4\xa2\x52\xc9\xba\x08\x39\x4c\xd5\x5e\x31\xb5\xaf\x4c\x3e\x06\xb1\x76\x6a\xd9\x0d\xc3\x27\x18\x7b\x67\xc9\x85\xf4\x98\xfd\xc0\xaa\x2f\x8b\x60\xf8\xb9\x42\x8b\xe7\xa5\xb6\x64\x97\x87\xbb\x17\x0a\xd3\x42\x7e\x4b\xf6\x99\x9a\xeb\x49\x2b\x1b\xea\xd7\x84\x26\x39\x4c\x74\x4c\xdb\xcc\x6d\x05\x0c\xdb\x3d\x3b\x5e\x7d\x6b\x96\xcd\x28\xe3\xc7\xc3\xb1\x07\xcf\xd7\xbf\x05\x8c\x22\xa0\xd9\x5a\xe2\xba\xc1\x4a\x70\xc6\x27\x0b\xdf\xb0\x4d\xd7\x16\x7f\x22\x05\x1c\x9c\x87\x51\x9e\x3b\x6c\x34\xe0\xff\x69\x13\xc7\x28\x8f\x3d\x4d\xbf\x47\x8c\x6f\x70\x75\xee\x0c\x46\x97\x99\xf9\x43\x1e\xe3\x12\xe1\xee\xd2\x4e\x29\xb5\xfe\x1e\xd9\x38\x21\x45\x3c\x1b\xbf\x6a\x5d\x3e\x17\x93\x64\xa4\xc8\xe5\x4c\x59\xfa\x39\x76\xf8\x19\x1b\xfc\xde\xb4\x4a\xe6\x18\xfd\x8e\xef\xf8\x1d\x7f\xf2\xd8\x57\x62\x7c\x60\xa5\xc3\x93\xd8\xe5\x41\x76\xf6\xcc\x49\xde\xd5\xa3\xf2\xdf\x72\xe8\x19\x46\x8a\xac\x9b\x51\xb0\x8c\xe0\x12\x64\xfe\x38\x8f\xcc\x16\xb0\x9f\xa2\xac\xc7\x9c\x39\x5a\xf3\x67\x71\xfa\xec\x27\x33\x1f\xaf\xc3\xd4\xbd\x28\xd8\x57\x0c\x77\x05\x93\x74\x11\x55\xc7\x78\x29\xa9\x49\x0c\xe4\x72\xf2\x2c\xdd\xcd\xa1\x7e\x93\xb7\x96\xc2\x4a\x2f\x1d\x17\xa8\xf8\x53\xfd\x19\x41\xd1\x7c\xd7\x9b\x04\x15\x9c\xe2\xa2\xd2\xc9\x28\x22\xb6\x23\xc3\x24\x8b\x4a\x62\x2f\x6c\x96\xc9\x90\x29\x45\x3a\x61\xf0\xfc\x9e\x72\xfe\xf1\xa5\x4c\xda\x08\xf9\x46\xaa\xfb\x61\x9b\xa6\xeb\x40\x7b\xff\xec\x81\xff\x67\x0f\x98\x54\xd8\xcf\x49\x5d\x7c\x53\x81\x77\x49\x81\xfb\x7f\x45\xf8\x37\x00\x00\xff\xff\x43\xfd\x73\xdd\xab\x13\x00\x00")

func bundleJsBytes() ([]byte, error) {
	return bindataRead(
		_bundleJs,
		"bundle.js",
	)
}

func bundleJs() (*asset, error) {
	bytes, err := bundleJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bundle.js", size: 5035, mode: os.FileMode(420), modTime: time.Unix(1471739881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promiseJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\x6b\x6f\xdb\x46\x97\xfe\x1c\xfd\x8a\x89\x3e\xbc\x4b\x35\x12\x9d\x04\x69\x81\x46\xf5\x2e\xb2\xa9\x53\x78\xd1\xb8\xd9\xd8\x41\x51\x18\x41\x41\x91\x43\x69\x1a\x8a\xc3\x90\x43\x29\x4a\xeb\xff\xbe\xcf\x39\x73\xe1\x50\xb6\xb7\xc9\x2e\x1a\x24\xd5\x85\x33\xe7\x7e\x9e\x73\x51\xa7\x7d\x27\x45\x67\x5a\x95\x9b\xe9\x72\x32\xd9\x65\xed\x44\x88\xcb\xab\x17\x57\x67\xbf\xbf\x39\xbb\xf8\xf1\xfc\xe2\xa7\xb9\x38\x39\x11\x57\x1b\x89\x73\x59\x2b\x85\xd9\xd0\xbf\x56\x4a\xd1\xe8\xae\x53\xab\x8a\xae\x67\x46\x76\x22\x71\x17\x44\x2b\xb7\x99\xaa\x3b\xd1\xd7\x85\x2c\x55\x2d\x0b\xb1\x10\x59\x27\x54\x6d\x24\xbe\x29\x66\x81\xc3\xab\x77\x3f\xbf\x3a\xff\xf9\xe7\xb3\x1f\xc5\xa9\x98\x96\x7d\x55\xaa\xaa\x92\xc5\x94\x39\x66\xa2\x69\xf5\x56\x81\x6b\x9e\xd5\x62\x25\x71\x3d\x15\x24\x87\x65\x27\x54\x87\x37\xba\x95\x45\xa0\xf6\xf6\xec\xbf\xce\x5e\x5e\x59\x62\xad\xfc\x43\xe6\xc6\xd3\x52\x35\x44\x56\x5d\x6a\x6f\x42\x94\x56\x66\xc5\x42\xd7\xd5\x61\x82\xdb\xbf\x07\x39\xf9\x70\x25\x0d\x2b\xa9\x57\xa5\xea\xf2\x0c\x3c\x44\xae\xb7\x4d\x2b\xbb\x8e\xbe\x87\x40\x85\xde\xd7\xa3\x7b\x97\xb0\x5f\xbd\x26\xbe\xe1\xab\xe9\x92\x68\xad\x0e\xe0\xd6\xa9\x75\x4d\x8f\x71\x79\x2b\x8c\x16\xb0\xb1\xca\x60\x37\x58\xac\x90\xab\xcc\xd0\x7b\x31\xd5\x8d\x51\x5b\xf5\x39\x33\x4a\xd7\xd3\xd9\x64\x82\xdb\x97\x30\xf2\xc6\x98\xe6\xf9\xc9\xc9\x7e\xbf\x4f\x57\x55\x2f\xff\xc8\x76\x59\x0a\x71\x4e\x9e\x5d\x5c\x9e\x5c\x36\x52\x16\x8b\xbe\x59\x1c\x74\xdf\x2e\x7e\x95\xab\x4e\xc1\x0f\x8b\xbd\x32\x9b\x45\xb6\x78\x95\x75\x46\xb6\x8b\x4e\x9a\x2b\xb5\x95\xba\x37\x8b\xbe\x83\x18\x8b\x4e\xeb\x7a\xc2\x2e\x85\x09\xf1\x37\x13\x3b\xd9\x1e\x44\x89\xe3\x62\x9a\x75\x87\x3a\xdf\xb4\xba\xd6\x7d\x37\x15\x65\xa5\xf7\x50\xbe\x36\xad\xae\xe0\x43\x95\xca\x54\x28\x23\x0e\x4a\x56\x45\x17\x22\x21\x2b\x44\x56\x17\x42\x7e\x92\x79\x4f\x71\x50\xc1\xc8\xed\x9c\x58\xac\x7a\x23\x6a\x6d\xc4\xb6\xcf\x37\xf6\xeb\x54\x9c\x1b\x62\x5a\x66\x2d\x73\x94\x2d\xdf\xad\xd4\x7a\x43\xef\xcd\x06\xbe\x66\x31\xc5\x20\x77\x52\xd6\xf3\xc7\x33\x51\xc2\x11\xcc\xd9\xda\x92\xf8\x76\x29\x71\x39\x37\x50\xa2\xea\xb4\x27\xc8\x44\x34\xa4\x6b\x89\xc8\xf9\x76\x2b\x0b\x45\x7e\xef\x36\x6a\xdb\xcd\x39\x12\x0d\x98\x40\xd2\xd7\xbd\x61\x7b\x8b\x5f\x56\x9d\x6c\x77\x4e\x98\x29\x45\x6f\x05\x27\xc2\x02\x5d\x9f\xe7\x70\xbc\xda\x49\xe2\x94\x67\x55\x65\xe3\xb8\xad\xf1\xf6\xc0\xec\x7f\x7d\xf1\xf6\x02\x51\xff\xdc\x1a\xb4\xd0\xa0\x4b\x3a\xb3\xa8\xe4\x6e\x32\xd3\xaa\xd5\x7b\x70\x10\xef\xce\x45\xa5\x75\x33\x17\x90\x16\xb1\x61\x35\xa5\xd0\x44\x44\x36\x12\x42\x16\x08\x49\xd0\x7c\xf0\x00\x2e\xe5\xc0\x47\xc8\x42\x30\x26\x82\xcb\x24\x1e\x52\xa1\xaf\x11\x8d\x8d\xae\x49\x2e\xcf\x02\x0a\xb5\xe9\xc8\xaf\xb5\x90\x3b\x59\x8b\x57\x2f\x2e\xaf\xce\xde\x92\x93\x3b\x52\x55\x97\x1c\x53\x1d\x82\x6a\xad\x3a\x93\xae\x11\x2d\xfd\x8a\x63\xca\x07\xd8\xc9\xf7\xab\xef\xbf\x7d\xf6\xb4\x78\x52\x64\x4f\xb3\x27\xdf\x3d\x2b\x1e\x3f\xfb\xf6\x3b\x32\xab\x11\x6b\x70\x44\x62\x37\xc4\xa8\xa1\xd0\x86\xfc\x14\x20\xf2\x93\x61\xe1\xb2\x76\xdd\x6f\x65\x6d\x60\x67\x24\x9d\xfc\x94\xc3\x17\x6b\xc9\xbe\xcb\xc4\xd3\x6f\x3f\x89\x8e\x62\x16\xcf\x72\xf8\xaf\x43\x38\x25\xef\x08\x57\x6a\x08\x56\xf6\x75\xce\xce\x80\x42\x44\xda\xd3\x3d\x01\xcd\x6e\x46\xc8\x24\x28\x74\x91\x65\x49\x38\x9a\xcc\xc4\x9f\x94\xc2\xf4\xb0\xfc\x88\x47\xd7\xef\x39\x87\xc3\x81\x8f\xbd\xec\xe5\x12\x27\x04\x9e\x5f\xc2\x96\x06\x87\x1e\x5b\x80\xd9\x69\x55\xf8\x60\xdb\xa8\xd2\x80\x18\x7c\x42\xce\x37\xf8\x47\x5f\x67\x6c\x7e\x03\xa4\x63\x9f\x13\x8c\x41\x47\xc0\x9b\x86\xdd\x91\x6b\x5b\x0a\x06\x91\x6f\xfa\xfa\x43\x47\x86\x7d\xf2\xf8\xe9\x33\x91\xac\xfa\xb2\x94\xed\xa5\xfa\x2c\x67\xcc\x78\xf8\x0c\xde\x74\x84\x24\x0e\x12\x52\x4c\xfd\x37\x49\xc9\xba\xd0\xf9\xfd\x46\x01\x10\x92\xf2\x63\x5a\xc9\x7a\x6d\x36\x60\xeb\x64\x9f\x91\xdc\x1c\x2e\x59\x03\x74\xcc\x90\x55\xb8\x8d\xd0\x12\xb5\xdc\x87\xb4\x84\xf9\x88\x00\x68\x17\x7d\xeb\x80\xc7\x65\xa7\x0b\x00\x86\x31\xe6\x65\x39\x92\x71\xae\x1d\x8f\xf7\xc9\x8c\xa1\xab\xd6\xc1\xb1\xe4\x3c\xf8\x20\x4d\x6f\x1d\x7e\xf4\xe8\x3d\x74\x1a\x80\xd0\x82\xad\xf5\xed\x91\xed\xc8\x72\x85\x6c\x25\x4c\x21\xeb\x5c\x0e\x06\xf8\xa3\x07\xf0\x90\x15\x18\xca\xe9\x8f\x2a\x49\x7b\xe7\xad\xd3\xc8\x7e\xb3\x20\x2f\x09\x91\x76\x4d\xa5\x72\x99\xc0\x9d\xd1\x91\x65\x74\x22\x38\xdc\x7f\x79\x33\xf1\xff\xbd\x21\x27\x40\xda\xb6\xaf\xd9\x3e\xc1\x0d\x83\x60\x8c\x85\xed\x86\xb1\xb0\x3a\x30\x70\x30\x48\xe2\xd5\x97\x3e\x17\x7a\xf9\xc7\xdf\x38\xdb\xef\x0a\x4d\x70\xf9\x26\xca\x4a\xe2\xc5\x38\x05\x42\xfb\xec\xe0\x91\xa1\x13\x9b\xcc\xe6\xb2\xc5\x0d\x78\x97\x71\xa7\x5e\x4f\xbc\x45\xcc\xa1\x91\xf0\x9d\xc7\xac\x00\x59\x0f\x4f\x4f\x6f\x95\xa2\xc1\x50\x94\x0c\xaa\xed\xcc\x5c\x90\x57\xa8\xfa\x89\x42\xed\x18\xa1\x32\x63\x10\x41\x92\x41\xea\xc7\x5f\x5e\xd3\xcb\x54\x5b\xaa\x53\x77\x9b\x94\x2b\x48\xaf\x42\xe7\x9c\xd7\xa9\xa5\x72\x56\x49\xfa\x94\x4c\x41\x6b\x1a\x4c\x4e\xa7\xb7\x1a\xa7\x29\x1a\x8f\xe5\x4c\x82\x85\xc3\xf9\xad\x4e\x1d\xbf\xa4\x40\xed\x1d\x7c\x0b\xc9\x5a\xb5\xa2\x62\xf2\x5c\x98\xb6\x97\xde\x7b\xb8\xe9\xde\xb6\xd2\xf4\xed\x80\x19\x49\x1c\x19\x02\x22\xa7\x40\xfe\x17\x9e\x4a\x32\xcd\xd0\x07\x3c\x8e\x42\xe3\x86\x13\xa9\x55\xeb\x35\x0c\x48\x82\xad\xb2\xfc\x03\x0c\x60\xc3\xe3\x9b\x13\xe7\xb8\x13\x32\xfc\x85\xbe\x6d\xf3\x85\xcd\x42\xe7\xcf\x9a\x92\x64\x45\x1e\xc5\xb7\xc8\xb7\x05\x9c\x59\x17\x54\xe0\x2f\x74\x21\x39\xf2\x5f\x5f\x9e\x9f\x1d\x7b\x72\x54\x9c\xee\xf4\xe2\xdd\xca\x8a\x91\xb6\x31\x95\xc8\xc6\x21\xe0\x27\x21\x0a\x50\xb2\x10\x7a\x4e\xd7\x05\x30\x4f\xf7\x55\x51\xff\x9b\xe1\x8a\xd2\x21\x0e\x08\xa5\xb9\x54\x03\xb7\x65\x63\x6c\x5f\xa0\x11\x8d\x3e\x48\x27\x7f\x23\x4d\x54\xb3\x83\x24\x64\xf8\x21\xeb\x66\x89\xf5\xa1\xc7\x31\x9f\x11\x01\xfb\xa9\xc8\xec\xd1\x06\x92\x50\xb6\x75\xb2\x01\xca\x5d\x8b\x75\x09\xcc\x9c\x7d\x90\xc7\x17\x35\xfb\xd1\x75\x22\xd9\x96\xca\xb7\xe0\x2f\x7c\x45\x9a\xdc\x21\x7a\x59\x0f\x59\x8a\x82\xd6\x77\x9b\x31\x55\x2e\x69\xf5\xc1\x75\xb4\x5c\x12\x3c\x39\x10\xd7\xf8\x4c\xcd\x96\x07\x4a\x57\x66\x52\xa2\x43\xa4\x5d\xb4\x92\xcb\xef\x46\x73\xf8\xfc\x09\x63\x7a\xdf\x10\xb3\x82\x5b\x1b\xf4\x72\x36\x65\x05\xd8\xb4\xc0\x9d\x0f\x0a\xfe\xd2\x65\x19\x70\x8a\x1c\xe8\x2c\xee\x90\x27\xe1\xd8\xbe\x01\x43\x67\x61\xd0\x5c\xb8\x3f\xe2\x3f\xcf\x7e\x3a\xbf\x60\xb2\xa4\x84\x98\xe6\x15\x0c\x3b\x15\x1c\x6a\x8a\xd5\x44\xab\x24\xc3\x79\xfe\x33\x99\x04\x1b\xbc\xb1\x6d\x38\x23\x9b\x75\x35\x88\xc7\xfd\xf4\xe9\x78\x5e\x58\x3e\xa0\x9e\x0c\x94\x11\x6e\xf6\x40\x18\x0c\x54\x34\x13\x70\x0f\x84\x22\x53\x4b\xeb\xe0\x2c\x37\x3d\xf5\x54\x0e\x08\xb9\xc8\xb1\xff\xc9\xda\x33\xe6\xca\x3c\x73\xae\xf2\xcb\x07\x0f\x88\x4d\x5e\x29\xeb\x8b\x02\x73\x85\x2b\x9c\x0d\x86\x0c\xd8\x11\xc3\x82\xf8\xe1\x52\x51\xa9\x79\x92\x3e\x4e\x9f\x86\x78\xab\xb2\xcf\x07\x14\x29\x88\x56\x1b\xc5\x69\xfd\xef\x2e\x22\xcf\x4b\xa0\x63\xd0\x7b\x0f\x9c\x47\xb7\x92\xab\x52\x91\xb4\x1c\x5d\x88\x3d\xce\x1e\xf6\x3a\xb9\x03\x7d\x98\xae\x76\xf2\xc4\xce\x1b\xe1\x72\x27\x56\x1a\x9a\xda\xde\x4c\x75\x51\x80\x70\x6d\x0b\x96\x74\x98\x49\x36\xa4\x73\xae\x51\xc1\xe3\xc4\x97\xda\x10\xaa\x08\xbc\x38\xed\xb7\x32\x75\xbc\xf9\x89\x4f\xf7\xb9\xcd\xac\x20\xd8\x40\xe0\x4e\x81\xd2\x2f\x62\x43\xaa\x8d\xb8\xcc\x06\x2e\x23\xb5\xef\xd5\xfa\x66\x02\x20\x72\x81\x94\xa2\xb6\x19\x4d\x18\x08\xad\xff\x24\x4a\x2f\x50\x62\xbe\x8b\x6c\x87\xfb\x14\xad\xe1\xdc\x73\x9a\xe7\x58\x1d\xc0\xb8\x1b\xed\xe8\x1d\x24\xa8\xe9\x15\x43\x5a\xbe\xa1\x37\x8c\x71\xd5\x61\x6a\xdb\x78\x63\xa1\x68\x3a\xe1\xcc\xe7\xfb\xcf\x23\x4d\x77\x19\xda\x5d\xaf\x2b\xc3\xf2\x10\xd2\x84\xc6\xa3\xa0\x1e\x43\x71\x94\xd8\x4c\x05\x89\x6c\x1d\x78\x84\xd8\x4c\xd1\xd9\x8f\x6a\xe2\x15\x94\x39\x6b\x5b\xdd\x26\x53\x14\x27\xb9\x05\xc6\x42\x57\xef\x2a\x3f\xef\x72\x70\x75\xb2\x2a\xa7\x33\x0f\x21\xe3\x28\x61\xac\xc2\x2d\xd9\xba\x4c\x39\x16\xe7\x5f\xff\x0a\x45\x66\x90\x6f\xea\x55\x9f\x8a\xbf\xfe\x12\xb7\x1f\xeb\x15\xdb\x75\x36\xb8\x1f\xe8\x13\x85\x02\xf7\xd8\x8c\x4b\xa7\x5c\x94\x97\xa1\xb7\x10\x64\x69\x1a\xc9\x74\xbf\xde\xfc\xc7\xe8\x02\xb9\x08\xe7\x99\x4d\x4a\x1f\x86\x1a\x1c\x55\x42\x7b\x6a\x24\xe3\xb8\xa0\x53\xbb\x0e\x97\x72\x0e\x52\xdc\x0d\xf4\x44\x82\xac\x47\xc9\x52\x34\x75\xed\xa9\x1d\xb7\x61\x31\xb3\x66\xb4\xfa\x65\xb6\x58\xc4\x83\xca\xff\x9a\xbc\x8d\xb4\x92\xf3\x64\x4e\x18\x10\x89\x42\xdf\xa7\x24\x88\xb5\xf5\x3c\x7a\x14\xe7\x51\x9b\x8d\x35\xf0\x1a\xb3\xc1\x6e\x3f\x12\xc1\xb4\xa8\xd0\x9d\x5c\xde\x7a\x1c\xe5\x3b\x48\x1f\x3f\xbf\x19\x7d\xbe\xb9\x57\xa8\xf6\x1f\x10\x8a\xa3\x1b\x94\xff\x46\xa6\xd1\x73\x9f\x46\xc7\x67\x6f\x04\xe7\xb2\x48\x46\xad\xfe\x20\xe2\xc8\x0f\x43\x6e\xc5\x5d\xff\x98\xb4\x6f\xf8\x27\xe1\xca\xb8\x66\x85\x0d\xd4\x72\x38\xb1\xf3\x01\x1b\xa5\x39\x34\xcd\x3d\x77\x6a\x45\x92\xbb\x9b\x31\xea\xa0\x12\x8a\xfb\xda\x8e\x99\x15\x5e\xe8\xaa\xab\xfd\x4b\x7c\xff\x83\xa8\xf0\xf2\xe8\xd1\x6c\x64\x0e\xf6\xec\x4b\xae\x66\xcc\xeb\xba\xc6\x20\x6b\x11\x6a\x39\x89\x2d\x08\xdf\x32\x9c\x91\xde\x31\x9a\xd1\xc8\xa5\xeb\xff\x17\x9c\xdd\x61\x1e\xbf\x52\x3b\xb2\x8e\x65\x16\x61\x93\xaf\xc3\x16\xa0\xd2\x7c\x19\xa4\x70\x4f\xfe\x8f\xb6\x73\xb7\xff\xd6\x7c\x64\x0d\x67\x3d\x77\x85\x0d\xe8\x8c\x32\xb6\xa0\x10\xb2\xea\x64\x34\x6a\x3e\xf4\x85\xa9\xeb\x1b\x5e\xf3\xbd\xab\xf3\x0c\x48\x66\xde\x32\x5d\x08\xca\x98\x3d\x70\x04\x8e\xc0\x5f\x32\xad\xf4\x3a\x99\xfe\xa6\x7b\xb4\x6f\xe8\x7c\x7d\xa3\x94\x8a\x37\x15\xcf\xbf\x36\x94\x5b\x4f\x04\xb3\xcc\xd4\x8b\xe4\x5f\xc9\xdc\xf9\x87\xc8\xb1\x84\x2e\xb1\x5b\x75\xfd\x6a\x8e\x49\xfe\x6d\xdc\x2e\x34\x6e\xc2\xf2\x8d\x99\xd3\x6a\xf0\x03\xd5\x55\x27\xec\xe1\xb9\x20\x12\xee\x53\x4d\x9f\xde\xfa\x4f\xcd\x73\xd1\xd8\xf4\x88\x02\x3d\x0e\x82\x5b\x51\x13\x4f\x95\x7b\xbb\x0e\x76\xdd\x16\x77\x73\x8e\xfb\xb6\xe7\xd9\x16\xbd\xd2\x82\xbe\xe5\xae\xda\x3d\x42\xb5\xc3\x79\xbb\x82\xe0\x5e\x2e\x6b\x5b\x0c\xc1\x89\x9b\x4d\x21\x40\x2d\x69\xee\xcd\x68\x21\x89\x78\x90\x65\xa9\x72\xdc\xcc\x0f\xb3\xc8\x61\xf6\xee\xe0\x0f\xfb\xd9\xb6\xdd\x96\x51\x70\x79\xe4\x6a\x7f\x8e\xfa\x47\x7b\xea\xbd\x3d\x75\xc3\xa7\xdc\xb4\x67\x55\xa7\xde\xef\xe2\x97\xab\x41\x3b\x2e\x35\x7b\xbb\x8b\xe6\x85\x85\xf2\x33\x17\x3a\xd6\x84\xa2\x7a\x36\x54\xa7\xa3\xba\x62\x87\xc1\x76\xb4\x6f\xe1\x6d\x96\x4f\x17\xe6\x39\x60\x76\xe6\xbf\xdf\x2d\xef\xcd\x9a\xc8\x03\x34\xca\xc7\x5e\xb0\x0b\x84\x2e\x6f\x55\x63\xdc\xbe\x6a\x24\x4e\xd6\x71\xcf\x1d\xb6\x2d\xd6\xa6\x5d\xe4\xee\x00\x8a\xf7\x63\x94\x35\xe0\x5c\xc4\xa5\x68\x64\xeb\x3b\xb3\x32\x3e\xef\x93\xd1\x61\xb3\xeb\x98\x9a\x21\x15\x5c\x5b\x17\x67\x43\x5e\x06\x84\x8b\x3b\x2c\x72\x4e\x52\xf7\x55\x85\x2e\xbd\xac\x5d\x36\x91\x85\x90\xa8\x3b\x59\x2b\xde\x37\x6d\xa5\xd9\x68\xd2\x39\x74\x89\x5f\x4a\x19\xcf\xbe\x80\xb0\x1d\x21\x28\x2f\x29\x70\x9f\x60\xe0\xf0\x5b\x02\x4b\x90\x16\xed\xf4\xd4\x77\x79\x3c\xe9\x52\xe3\xd4\xa1\xd9\x35\xe4\x03\xdd\xaa\x35\x0f\xe9\xfe\x48\xd8\x25\x1f\x79\x70\x25\xc1\xc2\xfd\x12\x43\x9d\x57\x98\x52\x52\x2b\xc4\x85\x36\xe8\x74\x99\xf7\x86\xbc\xad\x29\x8f\xe8\xa2\xb6\xbb\xae\x5b\x8c\x16\xc2\x36\x51\x5b\xe4\x62\x67\x68\xfa\x3e\x8e\x19\xfc\xb5\x0b\x7c\xe6\x48\x7c\x42\x7b\x1d\x9b\x91\xf6\xeb\xee\xfb\xd7\x5d\x18\x24\x86\x6f\x28\xb2\x87\x0f\x68\x43\xa7\x57\xbe\x49\xf7\x59\x71\x34\x0c\x39\x6f\xc4\x78\x17\x17\x3d\x96\x72\xee\x62\x2d\xcc\xf2\xa3\x4d\xc4\xdd\xd5\xc6\x75\x0e\xb6\x1b\x8f\x44\xb6\xcb\x4f\xde\xd6\xf1\x1a\xa2\xcc\x14\xc6\x58\xcc\x95\xb5\x41\xa6\xc3\x4b\xde\x66\x59\x45\xbf\x40\x1c\xbc\xa5\x0a\xda\x92\xfa\x5f\x9d\x86\x69\x6c\xdb\x0d\x3b\xab\xad\xed\x58\x23\x81\x76\x63\x89\x6c\x7b\xb7\x1b\x0f\x73\x5f\x21\x0a\xa9\x51\x50\x34\x0d\x35\x35\xb0\x92\x47\xad\x9f\xef\x9c\xa2\xb2\x76\xf3\xd5\xba\x0f\x0c\x6d\x2a\xcf\x26\x2e\x9f\xa7\x85\xac\xb2\xc3\x51\x68\x1c\x25\x98\x2f\x97\x7c\x34\x61\x43\xf1\xed\x1b\x96\x02\x15\x87\xca\xc4\x30\x2b\x06\x4a\x95\xea\x4c\xb4\x9e\x38\xc2\xa5\xb9\x08\x13\x6c\x34\x60\xe4\xe9\xe1\x9e\xf9\x22\x9e\x71\x28\xfc\x0e\x90\x8e\x1a\x8f\xf4\x60\x9b\xfc\xf8\xc7\x41\xa2\xec\xe1\x0b\xe5\x26\x34\xe4\x74\xc7\xa3\x59\x68\x60\xe3\x5e\xdb\x1e\x76\x06\x6f\xa3\x75\xd8\x80\x99\x31\x3d\xe6\x23\xdc\x2f\x2c\x6e\x15\x42\xcb\xa6\x34\x4d\x69\x8e\x8e\x54\x8f\x11\x36\xb4\x3b\xb7\x95\xbf\x6f\xb8\xba\x57\xf9\xfa\xb6\xf2\x47\xbd\xd4\x3f\xa3\xbf\x9d\x25\x1c\xa7\xfb\x2d\x80\x07\xd3\x97\x76\x8b\x35\x0c\x6d\xa5\xa6\x9f\x42\x44\xd2\x03\xc0\x94\x39\xc4\xfb\x04\x82\xda\x8a\x7e\x2b\x73\x00\xe8\x42\x6f\x88\x29\x3b\xfb\x0a\x65\x68\xec\x9e\x0d\xab\x0a\x3f\x9a\x9f\x8e\xf7\x06\x56\x33\xb2\xd8\xe7\xbb\x7a\xb1\xcf\xc1\x32\x74\x76\x39\x09\x21\xff\x79\x19\xef\x41\x1c\xb6\x9e\x8e\xb2\xb4\xfd\x02\xda\xc1\x90\xf7\x92\xe6\x9c\x1a\x51\xf6\xe9\xf7\xb5\x78\x2a\xc4\x83\x07\x11\x98\x86\x13\xdb\x8e\xe0\xdb\xee\xd4\xa9\x94\x47\xcc\xa9\x0d\x8a\x59\x37\xd9\xa0\x13\xee\xf7\x15\x0f\x0a\xd7\xef\x6d\xc7\xd3\xe6\xdc\xee\x7b\x64\x78\x73\x4b\x69\xfe\x95\xc6\x5d\x8b\xda\x99\x02\x45\xb8\xaf\xcd\xe8\xb7\xb4\xb6\x49\x9a\xb9\x50\xf1\x14\xf4\xb0\x89\xb6\x1d\x8d\x5d\x19\x3c\x1c\x27\x83\x6f\x87\xc1\xf9\xc8\xef\x49\xe3\xc2\xda\x5e\xbc\xbd\x94\x3b\x1c\x23\x38\x49\x79\xad\xe8\x47\xb1\xc3\x2e\x9a\x49\xf3\x47\x8f\xc6\x8b\x0f\xd2\xfa\x14\xd1\xed\x26\x9b\x19\xab\x3e\x4c\xf8\x96\xd0\xd0\x2b\xcd\x6f\x71\xae\x8f\x38\xf3\x6d\xbb\x68\xda\xcd\xc6\xd3\xaf\x07\xd6\x68\xc4\xfa\xc4\x3f\x8a\xe1\xe5\x87\x41\x06\x7c\xf4\x63\x15\xd9\x31\xbb\xfe\x84\x09\xea\x53\x58\xd7\xbf\xc2\xdd\xcf\xb2\xd5\xc2\xad\xb1\xb9\x73\xef\xe6\x61\x7b\x15\x35\xc4\x13\x6f\xfa\xa0\xde\x24\x12\xf2\x58\xc5\x21\x28\xe9\xc0\x28\x92\x4a\xbc\xbe\x74\x0b\xef\x4b\x73\xa8\xc6\x89\xa8\xe7\x54\x1e\x1a\x17\xd8\xfc\x16\xcf\xed\x2b\x7c\x7e\xcd\xed\x3d\x69\x4b\xfd\x15\x46\x22\x3b\xe6\x04\x1b\x28\x3b\x66\x2a\xe5\x2f\x05\x3b\x28\x98\x45\x29\xbc\xc2\x1e\x51\x28\xe9\x6b\x3e\x06\xf7\xbe\x8f\x3a\x0d\x10\x1f\xbe\x1f\xff\x02\xa8\x87\xa6\x32\xaa\x7b\x77\xf7\x23\x56\x52\xfa\x99\x15\x34\x5e\x90\x6d\x87\x3d\x69\xda\xd1\xef\x9c\x16\x92\xc3\xef\x0f\x77\xec\x53\xbe\x26\xab\xc7\x7c\xf3\xd5\x31\x0c\xcd\x5d\x34\xdf\xbd\x30\x62\x9c\x0a\x5e\x1b\x03\x7b\x2c\x55\xec\xeb\xa3\x05\xd1\x78\x3d\xc4\xbf\x2f\xdb\x01\x6e\x75\x74\x10\x56\x4c\xb3\xa6\xa9\x0e\xe4\x70\xfe\x7f\x01\xe2\xe7\xf1\x5e\x29\x6c\x91\x66\x23\x5f\x0d\xe5\x06\xff\x86\x68\x83\xe3\x10\x6c\xff\x13\x00\x00\xff\xff\xc7\x0f\x2d\x15\x00\x25\x00\x00")

func promiseJsBytes() ([]byte, error) {
	return bindataRead(
		_promiseJs,
		"promise.js",
	)
}

func promiseJs() (*asset, error) {
	bytes, err := promiseJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "promise.js", size: 9472, mode: os.FileMode(420), modTime: time.Unix(1473500013, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bundle.js": bundleJs,
	"promise.js": promiseJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"bundle.js": &bintree{bundleJs, map[string]*bintree{}},
	"promise.js": &bintree{promiseJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

